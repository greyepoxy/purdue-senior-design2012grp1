


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* SAM9XE.S: Startup file for Atmel AT91SAM9XE device s
                       eries                 */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2009 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ; The Startup code is executed after CPU Reset. This fil
                       e may be 
   15 00000000         ; translated with the following SET symbols. In uVision 
                       these SET 
   16 00000000         ; symbols are entered under Options - ASM - Define.
   17 00000000         ; 
   18 00000000         ;  SIZE_INT_INFO: size of program image is coded instead
                        of Reserved vector
   19 00000000         ;                 at address 0x14, if code is located in
                        Internal RAM.
   20 00000000         ;
   21 00000000         ;  SIZE_EXT_INFO: size of program image is coded instead
                        of Reserved vector
   22 00000000         ;                 at address 0x14, if code is located in
                        External SDRAM.
   23 00000000         ;
   24 00000000         ;  REMAP:         when set the startup code remaps excep
                       tion vectors from
   25 00000000         ;                 on-chip RAM to address 0.
   26 00000000         ;
   27 00000000         ;  VEC_TO_RAM:    when set the startup code copies excep
                       tion vectors 
   28 00000000         ;                 from Image Load Address to on-chip RAM
                       .
   29 00000000         ;
   30 00000000         ;  NO_EBI_INIT:   when set the EBI is not initialized in
                        startup
   31 00000000         ;                 and it is used when EBI is initialized
                        from debugger 
   32 00000000         ;                 enviroment (using the debug script).
   33 00000000         ;
   34 00000000         ;  NO_SDRAM_INIT: when set the SDRAM controller is not i
                       nitialized in startup
   35 00000000         ;                 and it is used when SDRAM controller i
                       s initialized from 



ARM Macro Assembler    Page 2 


   36 00000000         ;                 debugger enviroment (using the debug s
                       cript).
   37 00000000         ;
   38 00000000         ;  NO_PMC_INIT:   when set the Power Management Controll
                       er and system clock 
   39 00000000         ;                 are not initialized in startup and it 
                       is used when PLL is 
   40 00000000         ;                 initialized from debugger enviroment (
                       using the debug script).
   41 00000000         
   42 00000000         
   43 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   44 00000000         
   45 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   46 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   47 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   48 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   49 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   50 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   51 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   52 00000000         
   53 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   54 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   55 00000000         
   56 00000000         
   57 00000000         ; Internal Memory Base Addresses
   58 00000000 00100000 
                       IROM_BASE
                               EQU              0x00100000
   59 00000000 00300000 
                       IRAM_BASE
                               EQU              0x00300000
   60 00000000         
   61 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   62 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   63 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   64 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   65 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   66 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   67 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>



ARM Macro Assembler    Page 3 


   68 00000000         ;// </h>
   69 00000000         
   70 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   71 00000000 00000008 
                       SVC_Stack_Size
                               EQU              0x00000008
   72 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   73 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   74 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   75 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   76 00000000         
   78 00000000 00000088 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   79 00000000         
   80 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   81 00000000         
   82 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   83 00000400         __initial_sp
                               SPACE            ISR_Stack_Size
   84 00000488         Stack_Top
   85 00000488         
   86 00000488         
   87 00000488         ;// <h> Heap Configuration
   88 00000488         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   89 00000488         ;// </h>
   90 00000488         
   91 00000488 00000000 
                       Heap_Size
                               EQU              0x00000000
   92 00000488         
   93 00000488                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   94 00000000         __heap_base
   95 00000000         Heap_Mem
                               SPACE            Heap_Size
   96 00000000         __heap_limit
   97 00000000         
   98 00000000         
   99 00000000         ;----------------------- Enhanced Embedded Flash Control
                       ler Definitions --------
  100 00000000         
  101 00000000         ; Enhanced Embedded Flash Controller (EEFC) definitions
  102 00000000 FFFFFA00 
                       EEFC_FMR_Adr



ARM Macro Assembler    Page 4 


                               EQU              0xFFFFFA00  ; Flash Mode Regist
                                                            er     Address
  103 00000000         
  104 00000000         ;// <e> Enhanced Embedded Flash Controller (EEFC)
  105 00000000         ;//   <h> Flash Mode Register Register (EEFC_FMR)
  106 00000000         ;//     <o1.8..11>  FWS: Flash Wait State <1-16><#-1>
  107 00000000         ;//       <i> Number of cycles for Read/Write operations
                       
  108 00000000         ;//     <o1.0>      FRDY: Ready Interrupt Enable
  109 00000000         ;//   </h>
  110 00000000         ;// </e>
  111 00000000 00000001 
                       EEFC_SETUP
                               EQU              1
  112 00000000 00000200 
                       EEFC_FMR_Val
                               EQU              0x00000200
  113 00000000         
  114 00000000         
  115 00000000         ;----------------------- PIOs Definitions --------------
                       ------------------------
  116 00000000         
  117 00000000         ; Parallel Input/Output Controller (PIO) User Interface
  118 00000000 FFFFF400 
                       PIOA_BASE
                               EQU              0xFFFFF400  ; PIO A            
                                                                   Base Address
                                                            
  119 00000000 FFFFF600 
                       PIOB_BASE
                               EQU              0xFFFFF600  ; PIO B            
                                                                   Base Address
                                                            
  120 00000000 FFFFF800 
                       PIOC_BASE
                               EQU              0xFFFFF800  ; PIO C            
                                                                   Base Address
                                                            
  121 00000000 00000000 
                       PIO_PER_OFS
                               EQU              0x00        ; PIO Enable Regist
                                                            er     Address Offs
                                                            et
  122 00000000 00000004 
                       PIO_PDR_OFS
                               EQU              0x04        ; PIO Disable Regis
                                                            ter    Address Offs
                                                            et
  123 00000000 00000010 
                       PIO_OER_OFS
                               EQU              0x10        ; PIO Output Enable
                                                             Reg   Address Offs
                                                            et
  124 00000000 00000014 
                       PIO_ODR_OFS
                               EQU              0x14        ; PIO Output Disabl
                                                            e Reg  Address Offs
                                                            et
  125 00000000 00000050 



ARM Macro Assembler    Page 5 


                       PIO_MDER_OFS
                               EQU              0x50        ; PIO Multi-Driver 
                                                            En Reg Address Offs
                                                            et
  126 00000000 00000054 
                       PIO_MDDR_OFS
                               EQU              0x54        ; PIO Multi-Driver 
                                                            Ds Reg Address Offs
                                                            et
  127 00000000 00000060 
                       PIO_PUDR_OFS
                               EQU              0x60        ; PIO Pull-up Disab
                                                            le Reg Address Offs
                                                            et
  128 00000000 00000064 
                       PIO_PUER_OFS
                               EQU              0x64        ; PIO Pull-up Enabl
                                                            e Reg  Address Offs
                                                            et
  129 00000000 00000070 
                       PIO_ASR_OFS
                               EQU              0x70        ; PIO Periph A Sele
                                                            ct Reg Address Offs
                                                            et
  130 00000000 00000074 
                       PIO_BSR_OFS
                               EQU              0x74        ; PIO Periph B Sele
                                                            ct Reg Address Offs
                                                            et
  131 00000000         
  132 00000000         
  133 00000000         ;----------------------- Power Management Controller (PM
                       C) Definitions ---------
  134 00000000         
  135 00000000         ; Power Management Controller (PMC) definitions
  136 00000000 FFFFFC00 
                       PMC_BASE
                               EQU              0xFFFFFC00  ; PMC              
                                                                   Base Address
                                                            
  137 00000000 00000000 
                       PMC_SCER_OFS
                               EQU              0x00        ; Sys Clk Enable Re
                                                            g      Address Offs
                                                            et
  138 00000000 00000004 
                       PMC_SCDR_OFS
                               EQU              0x04        ; Sys Clk Disable R
                                                            eg     Address Offs
                                                            et
  139 00000000 00000008 
                       PMC_SCSR_OFS
                               EQU              0x08        ; Sys Clk Status Re
                                                            g      Address Offs
                                                            et
  140 00000000 00000010 
                       PMC_PCER_OFS
                               EQU              0x10        ; Periph Clk Enable
                                                             Reg   Address Offs



ARM Macro Assembler    Page 6 


                                                            et
  141 00000000 00000014 
                       PMC_PCDR_OFS
                               EQU              0x14        ; Periph Clk Disabl
                                                            e Reg  Address Offs
                                                            et
  142 00000000 00000018 
                       PMC_PCSR_OFS
                               EQU              0x18        ; Periph Clk Status
                                                             Reg   Address Offs
                                                            et
  143 00000000 00000020 
                       CKGR_MOR_OFS
                               EQU              0x20        ; Main Oscillator R
                                                            eg     Address Offs
                                                            et
  144 00000000 00000024 
                       CKGR_MCFR_OFS
                               EQU              0x24        ; Main Clock Freq R
                                                            eg     Address Offs
                                                            et
  145 00000000 00000028 
                       CKGR_PLLAR_OFS
                               EQU              0x28        ; PLLA Reg         
                                                                   Address Offs
                                                            et
  146 00000000 0000002C 
                       CKGR_PLLBR_OFS
                               EQU              0x2C        ; PLLA Reg         
                                                                   Address Offs
                                                            et
  147 00000000 00000030 
                       PMC_MCKR_OFS
                               EQU              0x30        ; Master Clock Reg 
                                                                   Address Offs
                                                            et
  148 00000000 00000040 
                       PMC_PCK0_OFS
                               EQU              0x40        ; Programmable Clk 
                                                            0 Reg  Address Offs
                                                            et
  149 00000000 00000044 
                       PMC_PCK1_OFS
                               EQU              0x44        ; Programmable Clk 
                                                            1 Reg  Address Offs
                                                            et
  150 00000000 00000048 
                       PMC_PCK2_OFS
                               EQU              0x48        ; Programmable Clk 
                                                            2 Reg  Address Offs
                                                            et
  151 00000000 0000004C 
                       PMC_PCK3_OFS
                               EQU              0x4C        ; Programmable Clk 
                                                            3 Reg  Address Offs
                                                            et
  152 00000000 00000060 
                       PMC_IER_OFS
                               EQU              0x60        ; Interrupt Enable 



ARM Macro Assembler    Page 7 


                                                             Reg   Address Offs
                                                            et
  153 00000000 00000064 
                       PMC_IDR_OFS
                               EQU              0x64        ; Interrupt Disable
                                                             Reg   Address Offs
                                                            et
  154 00000000 00000068 
                       PMC_SR_OFS
                               EQU              0x68        ; Status Register  
                                                                   Address Offs
                                                            et
  155 00000000 0000006C 
                       PMC_IMR_OFS
                               EQU              0x6C        ; Interrupt Mask Re
                                                            g      Address Offs
                                                            et
  156 00000000 00000080 
                       PMC_PLLICPR_OFS
                               EQU              0x80        ; Charge Pump Curre
                                                            nt Reg Address Offs
                                                            et
  157 00000000         
  158 00000000         ; Bit constants
  159 00000000 00000001 
                       PMC_MOSCEN
                               EQU              (1<<0)      ; Main Oscillator E
                                                            nable
  160 00000000 07FF0000 
                       PMC_MUL EQU              (0x7FF<<16) ; PLL Multiplier
  161 00000000 00000001 
                       PMC_MOSCS
                               EQU              (1<<0)      ; Main Oscillator S
                                                            table
  162 00000000 00000002 
                       PMC_LOCKA
                               EQU              (1<<1)      ; PLL A Lock Status
                                                            
  163 00000000 00000004 
                       PMC_LOCKB
                               EQU              (1<<2)      ; PLL A Lock Status
                                                            
  164 00000000 00000008 
                       PMC_MCKRDY
                               EQU              (1<<3)      ; Master Clock Stat
                                                            us
  165 00000000         
  166 00000000         ;// <e> Power Management Controller (PMC)
  167 00000000         ;//   <h> System Clock Enable Register (PMC_SCER)
  168 00000000         ;//     <o1.0>      PCK: Processor Clock Enable
  169 00000000         ;//     <o1.6>      UHP: USB Host Port Clock Enable
  170 00000000         ;//     <o1.7>      UDP: USB Device Port Clock Enable
  171 00000000         ;//     <o1.8>      PCK0: Programmable Clock 0 Output En
                       able
  172 00000000         ;//     <o1.9>      PCK1: Programmable Clock 1 Output En
                       able
  173 00000000         ;//   </h>
  174 00000000         ;//
  175 00000000         ;//   <h> Peripheral Clock Enable Register (PMC_PCER)



ARM Macro Assembler    Page 8 


  176 00000000         ;//     <o2.2>      PID2: Parallel IO Controller A Enabl
                       e
  177 00000000         ;//     <o2.3>      PID3: Parallel IO Controller B Enabl
                       e
  178 00000000         ;//     <o2.4>      PID4: Parallel IO Controller C Enabl
                       e
  179 00000000         ;//     <o2.5>      PID5: Analog to Digital Converter En
                       able
  180 00000000         ;//     <o2.6>      PID6: USART0 Enable
  181 00000000         ;//     <o2.7>      PID7: USART1 Enable
  182 00000000         ;//     <o2.8>      PID8: USART2 Enable
  183 00000000         ;//     <o2.9>      PID9: Multimedia Card Interface Enab
                       le
  184 00000000         ;//     <o2.10>     PID10: USB Device Port Enable
  185 00000000         ;//     <o2.11>     PID11: Two-Wire Interface 0 Enable
  186 00000000         ;//     <o2.12>     PID12: Serial Peripheral Interface 0
                        Enable
  187 00000000         ;//     <o2.13>     PID13: Serial Peripheral Interface 1
                        Enable
  188 00000000         ;//     <o2.14>     PID14: Serial Synchronous Controller
                        Enable
  189 00000000         ;//     <o2.17>     PID17: Timer Counter 0 Enable
  190 00000000         ;//     <o2.18>     PID18: Timer Counter 1 Enable
  191 00000000         ;//     <o2.19>     PID19: Timer Counter 2 Enable
  192 00000000         ;//     <o2.20>     PID20: USB Host Port Enable
  193 00000000         ;//     <o2.21>     PID21: Ethernet MAC Enable
  194 00000000         ;//     <o2.22>     PID22: Image Sensor Interface Enable
                       
  195 00000000         ;//     <o2.23>     PID23: USART3 Enable
  196 00000000         ;//     <o2.24>     PID24: USART4 Enable
  197 00000000         ;//     <o2.25>     PID25: Two-Wire Interface 1 Enable
  198 00000000         ;//     <o2.26>     PID26: Timer Couter 3 Enable
  199 00000000         ;//     <o2.27>     PID27: Timer Couter 4 Enable
  200 00000000         ;//     <o2.28>     PID28: Timer Couter 5 Enable
  201 00000000         ;//     <o2.29>     PID29: Advanced Interrupt Controller
                        (IRQ0) Enable
  202 00000000         ;//     <o2.30>     PID30: Advanced Interrupt Controller
                        (IRQ1) Enable
  203 00000000         ;//     <o2.31>     PID31: Advanced Interrupt Controller
                        (IRQ2) Enable
  204 00000000         ;//   </h>
  205 00000000         ;//
  206 00000000         ;//   <h> Main Oscillator Register (CKGR_MOR)
  207 00000000         ;//     <o3.0>      MOSCEN: Main Oscillator Enable
  208 00000000         ;//     <o3.8..15>  OSCOUNT: Main Oscillator Startup Tim
                       e <0-255>
  209 00000000         ;//   </h>
  210 00000000         ;//
  211 00000000         ;//   <h> Clock Generator Phase Locked Loop A Register (
                       CKGR_PLLAR)
  212 00000000         ;//                   <i> PLL A Freq = (Main CLOCK Freq 
                       / DIVA) * (MULA + 1)
  213 00000000         ;//                   <i> Example: XTAL = 18.432 MHz, DI
                       VA = 14, MULA = 72  =>  PLLA = 96.1097 MHz
  214 00000000         ;//     <o4.0..7>   DIVA: PLL Divider A <0-255>
  215 00000000         ;//                   <i> 0        - Divider output is 0
                       
  216 00000000         ;//                   <i> 1        - Divider is bypassed
                       



ARM Macro Assembler    Page 9 


  217 00000000         ;//                   <i> 2 .. 255 - Divider output is t
                       he Main Clock divided by DIVA
  218 00000000         ;//     <o4.8..13>  PLLACOUNT: PLL A Counter <0-63>
  219 00000000         ;//                   <i> Number of Slow Clocks before t
                       he LOCKA bit is set in 
  220 00000000         ;//                   <i> PMC_SR after CKGR_PLLAR is wri
                       tten
  221 00000000         ;//     <o4.14..15> OUTA: PLL A Clock Frequency Range
  222 00000000         ;//                   <0=> 80 .. 160MHz   <1=> Reserved
  223 00000000         ;//                   <2=> 150 .. 240MHz  <3=> Reserved
  224 00000000         ;//     <o4.16..26> MULA: PLL A Multiplier <0-2047>
  225 00000000         ;//                   <i> 0         - The PLL A is deact
                       ivated
  226 00000000         ;//                   <i> 1 .. 2047 - The PLL A Clock fr
                       equency is the PLL a input 
  227 00000000         ;//                   <i>             frequency multipli
                       ed by MULA + 1
  228 00000000         ;//   </h>
  229 00000000         ;//
  230 00000000         ;//   <h> Clock Generator Phase Locked Loop B Register (
                       CKGR_PLLBR)
  231 00000000         ;//                   <i> PLL B Freq = (Main CLOCK Freq 
                       / DIVB) * (MULB + 1)
  232 00000000         ;//     <o5.0..7>   DIVB: PLL Divider B <0-255>
  233 00000000         ;//                   <i> 0        - Divider output is 0
                       
  234 00000000         ;//                   <i> 1        - Divider is bypassed
                       
  235 00000000         ;//                   <i> 2 .. 255 - Divider output is t
                       he Main Clock divided by DIVB
  236 00000000         ;//     <o5.8..13>  PLLBCOUNT: PLL B Counter <0-63>
  237 00000000         ;//                   <i> Number of Slow Clocks before t
                       he LOCKB bit is set in 
  238 00000000         ;//                   <i> PMC_SR after CKGR_PLLBR is wri
                       tten
  239 00000000         ;//     <o5.14..15> OUTB: PLL B Clock Frequency Range
  240 00000000         ;//                   <0=> 80 .. 160MHz   <1=> Reserved
  241 00000000         ;//                   <2=> 150 .. 240MHz  <3=> Reserved
  242 00000000         ;//     <o5.16..26> MULB: PLL B Multiplier <0-2047>
  243 00000000         ;//                   <i> 0         - The PLL B is deact
                       ivated
  244 00000000         ;//                   <i> 1 .. 2047 - The PLL B Clock fr
                       equency is the PLL a input 
  245 00000000         ;//                   <i>             frequency multipli
                       ed by MULB + 1
  246 00000000         ;//     <o5.28>     USB_96M: Divider by 2 Enable
  247 00000000         ;//                   <i> 0 - USB ports = PLL B Clock, P
                       LL B Clock must be 48MHz
  248 00000000         ;//                   <i> 1 - USB ports = PLL B Clock / 
                       2, PLL B Clock must be 96MHz
  249 00000000         ;//   </h>
  250 00000000         ;//
  251 00000000         ;//   <h> Master Clock Register (CKGR_MCKR)
  252 00000000         ;//     <o6.0..1>   CSS: Master Clock Selection
  253 00000000         ;//                   <0=> Slow Clock
  254 00000000         ;//                   <1=> Main Clock
  255 00000000         ;//                   <2=> PLL A Clock
  256 00000000         ;//                   <3=> PLL B Clock
  257 00000000         ;//     <o6.2..4>   PRES: Master Clock Prescaler



ARM Macro Assembler    Page 10 


  258 00000000         ;//                   <0=> Clock        <1=> Clock / 2
  259 00000000         ;//                   <2=> Clock / 4    <3=> Clock / 8
  260 00000000         ;//                   <4=> Clock / 16   <5=> Clock / 32
  261 00000000         ;//                   <6=> Clock / 64   <7=> Reserved
  262 00000000         ;//     <o6.8..9>   MDIV: Master Clock Division
  263 00000000         ;//                   <0=> Processor Clock = Master Cloc
                       k
  264 00000000         ;//                   <1=> Processor Clock = Master Cloc
                       k / 2
  265 00000000         ;//                   <2=> Processor Clock = Master Cloc
                       k / 4
  266 00000000         ;//                   <3=> Reserved
  267 00000000         ;//   </h>
  268 00000000         ;//
  269 00000000         ;//   <h> Programmable Clock Register 0 (PMC_PCK0)
  270 00000000         ;//     <o7.0..1>   CSS: Master Clock Selection
  271 00000000         ;//                   <0=> Slow Clock
  272 00000000         ;//                   <1=> Main Clock
  273 00000000         ;//                   <2=> PLL A Clock
  274 00000000         ;//                   <3=> PLL B Clock
  275 00000000         ;//     <o7.2..4>   PRES: Programmable Clock Prescaler
  276 00000000         ;//                   <0=> Clock        <1=> Clock / 2
  277 00000000         ;//                   <2=> Clock / 4    <3=> Clock / 8
  278 00000000         ;//                   <4=> Clock / 16   <5=> Clock / 32
  279 00000000         ;//                   <6=> Clock / 64   <7=> Reserved
  280 00000000         ;//   </h>
  281 00000000         ;//
  282 00000000         ;//   <h> Programmable Clock Register 1 (PMC_PCK1)
  283 00000000         ;//     <o8.0..1>   CSS: Master Clock Selection
  284 00000000         ;//                   <0=> Slow Clock
  285 00000000         ;//                   <1=> Main Clock
  286 00000000         ;//                   <2=> PLL A Clock
  287 00000000         ;//                   <3=> PLL B Clock
  288 00000000         ;//     <o8.2..4>   PRES: Programmable Clock Prescaler
  289 00000000         ;//                   <0=> None         <1=> Clock / 2
  290 00000000         ;//                   <2=> Clock / 4    <3=> Clock / 8
  291 00000000         ;//                   <4=> Clock / 16   <5=> Clock / 32
  292 00000000         ;//                   <6=> Clock / 64   <7=> Reserved
  293 00000000         ;//   </h>
  294 00000000         ;//
  295 00000000         ;//   <h> Programmable Clock Register 2 (PMC_PCK2)
  296 00000000         ;//     <o9.0..1>   CSS: Master Clock Selection
  297 00000000         ;//                   <0=> Slow Clock
  298 00000000         ;//                   <1=> Main Clock
  299 00000000         ;//                   <2=> PLL A Clock
  300 00000000         ;//                   <3=> PLL B Clock
  301 00000000         ;//     <o9.2..4>   PRES: Programmable Clock Prescaler
  302 00000000         ;//                   <0=> None         <1=> Clock / 2
  303 00000000         ;//                   <2=> Clock / 4    <3=> Clock / 8
  304 00000000         ;//                   <4=> Clock / 16   <5=> Clock / 32
  305 00000000         ;//                   <6=> Clock / 64   <7=> Reserved
  306 00000000         ;//   </h>
  307 00000000         ;//
  308 00000000         ;//   <h> Programmable Clock Register 3 (PMC_PCK3)
  309 00000000         ;//     <o10.0..1>  CSS: Master Clock Selection
  310 00000000         ;//                   <0=> Slow Clock
  311 00000000         ;//                   <1=> Main Clock
  312 00000000         ;//                   <2=> PLL A Clock
  313 00000000         ;//                   <3=> PLL B Clock



ARM Macro Assembler    Page 11 


  314 00000000         ;//     <o10.2..4>  PRES: Programmable Clock Prescaler
  315 00000000         ;//                   <0=> None         <1=> Clock / 2
  316 00000000         ;//                   <2=> Clock / 4    <3=> Clock / 8
  317 00000000         ;//                   <4=> Clock / 16   <5=> Clock / 32
  318 00000000         ;//                   <6=> Clock / 64   <7=> Reserved
  319 00000000         ;//   </h>
  320 00000000         ;// </e>
  321 00000000 00000001 
                       PMC_SETUP
                               EQU              1
  322 00000000 00000201 
                       PMC_SCER_Val
                               EQU              0x00000201
  323 00000000 0040080C 
                       PMC_PCER_Val
                               EQU              0x0040080C
  324 00000000 00000B01 
                       CKGR_MOR_Val
                               EQU              0x00000B01
  325 00000000 20483F0E 
                       CKGR_PLLAR_Val
                               EQU              0x20483F0E
  326 00000000 00000000 
                       CKGR_PLLBR_Val
                               EQU              0x00000000
  327 00000000 00000001 
                       PMC_MCKR_Val
                               EQU              0x00000001
  328 00000000 00000001 
                       PMC_PCK0_Val
                               EQU              0x00000001
  329 00000000 00000005 
                       PMC_PCK1_Val
                               EQU              0x00000005
  330 00000000 00000000 
                       PMC_PCK2_Val
                               EQU              0x00000000
  331 00000000 00000000 
                       PMC_PCK3_Val
                               EQU              0x00000000
  332 00000000         
  333 00000000         
  334 00000000         ;----------------------- MATRIX Definitions ------------
                       ------------------------
  335 00000000         
  336 00000000         ; Bus Matrix (MATRIX) User Interface
  337 00000000         ; |- Chip Configuration (CCFG) User Interface
  338 00000000 FFFFEE00 
                       MATRIX_BASE
                               EQU              0xFFFFEE00  ; Bus Matrix       
                                                                   Base Address
                                                            
  339 00000000 00000000 
                       MATRIX_MCFG0_OFS
                               EQU              0x00        ; Master Config Reg
                                                             0     Address Offs
                                                            et
  340 00000000 00000004 
                       MATRIX_MCFG1_OFS



ARM Macro Assembler    Page 12 


                               EQU              0x04        ; Master Config Reg
                                                             1     Address Offs
                                                            et
  341 00000000 00000008 
                       MATRIX_MCFG2_OFS
                               EQU              0x08        ; Master Config Reg
                                                             2     Address Offs
                                                            et
  342 00000000 0000000C 
                       MATRIX_MCFG3_OFS
                               EQU              0x0C        ; Master Config Reg
                                                             3     Address Offs
                                                            et
  343 00000000 00000010 
                       MATRIX_MCFG4_OFS
                               EQU              0x10        ; Master Config Reg
                                                             4     Address Offs
                                                            et
  344 00000000 00000014 
                       MATRIX_MCFG5_OFS
                               EQU              0x14        ; Master Config Reg
                                                             5     Address Offs
                                                            et
  345 00000000 00000040 
                       MATRIX_SCFG0_OFS
                               EQU              0x40        ; Slave Config Reg 
                                                            0      Address Offs
                                                            et
  346 00000000 00000044 
                       MATRIX_SCFG1_OFS
                               EQU              0x44        ; Slave Config Reg 
                                                            1      Address Offs
                                                            et
  347 00000000 00000048 
                       MATRIX_SCFG2_OFS
                               EQU              0x48        ; Slave Config Reg 
                                                            2      Address Offs
                                                            et
  348 00000000 0000004C 
                       MATRIX_SCFG3_OFS
                               EQU              0x4C        ; Slave Config Reg 
                                                            3      Address Offs
                                                            et
  349 00000000 00000050 
                       MATRIX_SCFG4_OFS
                               EQU              0x50        ; Slave Config Reg 
                                                            4      Address Offs
                                                            et
  350 00000000 00000080 
                       MATRIX_PRAS0_OFS
                               EQU              0x80        ; Priority A for Sl
                                                            ave 0  Address Offs
                                                            et
  351 00000000 00000088 
                       MATRIX_PRAS1_OFS
                               EQU              0x88        ; Priority A for Sl
                                                            ave 1  Address Offs
                                                            et
  352 00000000 00000090 



ARM Macro Assembler    Page 13 


                       MATRIX_PRAS2_OFS
                               EQU              0x90        ; Priority A for Sl
                                                            ave 2  Address Offs
                                                            et
  353 00000000 00000098 
                       MATRIX_PRAS3_OFS
                               EQU              0x98        ; Priority A for Sl
                                                            ave 3  Address Offs
                                                            et
  354 00000000 000000A0 
                       MATRIX_PRAS4_OFS
                               EQU              0xA0        ; Priority A for Sl
                                                            ave 4  Address Offs
                                                            et
  355 00000000 00000100 
                       MATRIX_MRCR_OFS
                               EQU              0x100       ; Master Remap Cont
                                                            rol R  Address Offs
                                                            et
  356 00000000 0000011C 
                       EBI_CSA_OFS
                               EQU              0x11C       ; EBI Chip Select A
                                                            ssign  Address Offs
                                                            et
  357 00000000         
  358 00000000         ; Constants
  359 00000000 10000000 
                       EBI_CS0_ADDRESS
                               EQU              0x10000000  ; Start of memory a
                                                            ddressed by CS0
  360 00000000 20000000 
                       EBI_CS1_ADDRESS
                               EQU              0x20000000  ; Start of memory a
                                                            ddressed by CS1
  361 00000000 30000000 
                       EBI_CS2_ADDRESS
                               EQU              0x30000000  ; Start of memory a
                                                            ddressed by CS2
  362 00000000 40000000 
                       EBI_CS3_ADDRESS
                               EQU              0x40000000  ; Start of memory a
                                                            ddressed by CS3
  363 00000000 50000000 
                       EBI_CS4_ADDRESS
                               EQU              0x50000000  ; Start of memory a
                                                            ddressed by CS4
  364 00000000 60000000 
                       EBI_CS5_ADDRESS
                               EQU              0x60000000  ; Start of memory a
                                                            ddressed by CS5
  365 00000000 70000000 
                       EBI_CS6_ADDRESS
                               EQU              0x70000000  ; Start of memory a
                                                            ddressed by CS6
  366 00000000 80000000 
                       EBI_CS7_ADDRESS
                               EQU              0x80000000  ; Start of memory a
                                                            ddressed by CS7
  367 00000000         



ARM Macro Assembler    Page 14 


  368 00000000         ;// <e> Bus Matrix (MATRIX)
  369 00000000 00000000 
                       MATRIX_SETUP
                               EQU              0
  370 00000000         
  371 00000000         ;//   <h> Bus Matrix Master Configuration Registers
  372 00000000         ;//     <h>  Bus Matrix Master Configuration Registers 0
                        (MATRIX_MCFG0)
  373 00000000         ;//       <o0.0..2> ULBT: Undefined Length Burst Type 
  374 00000000         ;//                   <0=> Infinite Length Burst
  375 00000000         ;//                   <1=> Single Access
  376 00000000         ;//                   <2=> Four Beat Burst
  377 00000000         ;//                   <3=> Eight Beat Burst
  378 00000000         ;//                   <4=> Sixteen Beat Burst
  379 00000000         ;//     </h>
  380 00000000         ;//     <h>  Bus Matrix Master Configuration Registers 1
                        (MATRIX_MCFG1)
  381 00000000         ;//       <o1.0..2> ULBT: Undefined Length Burst Type 
  382 00000000         ;//                   <0=> Infinite Length Burst
  383 00000000         ;//                   <1=> Single Access
  384 00000000         ;//                   <2=> Four Beat Burst
  385 00000000         ;//                   <3=> Eight Beat Burst
  386 00000000         ;//                   <4=> Sixteen Beat Burst
  387 00000000         ;//     </h>
  388 00000000         ;//     <h>  Bus Matrix Master Configuration Registers 2
                        (MATRIX_MCFG2)
  389 00000000         ;//       <o2.0..2> ULBT: Undefined Length Burst Type 
  390 00000000         ;//                   <0=> Infinite Length Burst
  391 00000000         ;//                   <1=> Single Access
  392 00000000         ;//                   <2=> Four Beat Burst
  393 00000000         ;//                   <3=> Eight Beat Burst
  394 00000000         ;//                   <4=> Sixteen Beat Burst
  395 00000000         ;//     </h>
  396 00000000         ;//     <h>  Bus Matrix Master Configuration Registers 3
                        (MATRIX_MCFG3)
  397 00000000         ;//       <o3.0..2> ULBT: Undefined Length Burst Type 
  398 00000000         ;//                   <0=> Infinite Length Burst
  399 00000000         ;//                   <1=> Single Access
  400 00000000         ;//                   <2=> Four Beat Burst
  401 00000000         ;//                   <3=> Eight Beat Burst
  402 00000000         ;//                   <4=> Sixteen Beat Burst
  403 00000000         ;//     </h>
  404 00000000         ;//     <h>  Bus Matrix Master Configuration Registers 4
                        (MATRIX_MCFG4)
  405 00000000         ;//       <o4.0..2> ULBT: Undefined Length Burst Type 
  406 00000000         ;//                   <0=> Infinite Length Burst
  407 00000000         ;//                   <1=> Single Access
  408 00000000         ;//                   <2=> Four Beat Burst
  409 00000000         ;//                   <3=> Eight Beat Burst
  410 00000000         ;//                   <4=> Sixteen Beat Burst
  411 00000000         ;//     </h>
  412 00000000         ;//     <h>  Bus Matrix Master Configuration Registers 5
                        (MATRIX_MCFG5)
  413 00000000         ;//       <o5.0..2> ULBT: Undefined Length Burst Type 
  414 00000000         ;//                   <0=> Infinite Length Burst
  415 00000000         ;//                   <1=> Single Access
  416 00000000         ;//                   <2=> Four Beat Burst
  417 00000000         ;//                   <3=> Eight Beat Burst
  418 00000000         ;//                   <4=> Sixteen Beat Burst



ARM Macro Assembler    Page 15 


  419 00000000         ;//     </h>
  420 00000000         ;//   </h>
  421 00000000 00000000 
                       MATRIX_MCFG0_Val
                               EQU              0x00000000
  422 00000000 00000002 
                       MATRIX_MCFG1_Val
                               EQU              0x00000002
  423 00000000 00000002 
                       MATRIX_MCFG2_Val
                               EQU              0x00000002
  424 00000000 00000002 
                       MATRIX_MCFG3_Val
                               EQU              0x00000002
  425 00000000 00000002 
                       MATRIX_MCFG4_Val
                               EQU              0x00000002
  426 00000000 00000002 
                       MATRIX_MCFG5_Val
                               EQU              0x00000002
  427 00000000         
  428 00000000         ;//   <h> Bus Matrix Slave Configuration Registers
  429 00000000         ;//     <h> Bus Master Slave Configuration Register 0 (M
                       ATRIX_SCFG0)
  430 00000000         ;//       <o0.0..7>   SLOT_CYCLE: Maximum number of Allo
                       wed Cycles for a Burst
  431 00000000         ;//                   <i> When the SLOT_CYCLE limit is r
                       eached for a burst, it may be
  432 00000000         ;//                   <i> broken by another master tryin
                       g to access this slave
  433 00000000         ;//       <o0.16..17> DEFMASTR_TYPE: Default Master Type
                       
  434 00000000         ;//                   <0=> No Default Master
  435 00000000         ;//                   <1=> Last Default Master
  436 00000000         ;//                   <2=> Fixed Default Master
  437 00000000         ;//       <o0.18..20> FIXED_DEFMSTR: Fixed Index of Defa
                       ult Master <0-7>
  438 00000000         ;//                   <i> This is the index of the Fixed
                        Default Master for this slave
  439 00000000         ;//       <o0.24..25> ARBT: Arbitration Type
  440 00000000         ;//                   <0=> Round-Robin Arbitration
  441 00000000         ;//                   <1=> Fixed Priority Arbitration
  442 00000000         ;//     </h>
  443 00000000         ;//     <h> Bus Master Slave Configuration Register 1 (M
                       ATRIX_SCFG1)
  444 00000000         ;//       <o1.0..7>   SLOT_CYCLE: Maximum number of Allo
                       wed Cycles for a Burst
  445 00000000         ;//                   <i> When the SLOT_CYCLE limit is r
                       eached for a burst, it may be
  446 00000000         ;//                   <i> broken by another master tryin
                       g to access this slave
  447 00000000         ;//       <o1.16..17> DEFMASTR_TYPE: Default Master Type
                       
  448 00000000         ;//                   <0=> No Default Master
  449 00000000         ;//                   <1=> Last Default Master
  450 00000000         ;//                   <2=> Fixed Default Master
  451 00000000         ;//       <o1.18..20> FIXED_DEFMSTR: Fixed Index of Defa
                       ult Master <0-7>
  452 00000000         ;//                   <i> This is the index of the Fixed



ARM Macro Assembler    Page 16 


                        Default Master for this slave
  453 00000000         ;//       <o1.24..25> ARBT: Arbitration Type
  454 00000000         ;//                   <0=> Round-Robin Arbitration
  455 00000000         ;//                   <1=> Fixed Priority Arbitration
  456 00000000         ;//     </h>
  457 00000000         ;//     <h> Bus Master Slave Configuration Register 2 (M
                       ATRIX_SCFG2)
  458 00000000         ;//       <o2.0..7>   SLOT_CYCLE: Maximum number of Allo
                       wed Cycles for a Burst
  459 00000000         ;//                   <i> When the SLOT_CYCLE limit is r
                       eached for a burst, it may be
  460 00000000         ;//                   <i> broken by another master tryin
                       g to access this slave
  461 00000000         ;//       <o2.16..17> DEFMASTR_TYPE: Default Master Type
                       
  462 00000000         ;//                   <0=> No Default Master
  463 00000000         ;//                   <1=> Last Default Master
  464 00000000         ;//                   <2=> Fixed Default Master
  465 00000000         ;//       <o2.18..20> FIXED_DEFMSTR: Fixed Index of Defa
                       ult Master <0-7>
  466 00000000         ;//                   <i> This is the index of the Fixed
                        Default Master for this slave
  467 00000000         ;//       <o2.24..25> ARBT: Arbitration Type
  468 00000000         ;//                   <0=> Round-Robin Arbitration
  469 00000000         ;//                   <1=> Fixed Priority Arbitration
  470 00000000         ;//     </h>
  471 00000000         ;//     <h> Bus Master Slave Configuration Register 3 (M
                       ATRIX_SCFG3)
  472 00000000         ;//       <o3.0..7>   SLOT_CYCLE: Maximum number of Allo
                       wed Cycles for a Burst
  473 00000000         ;//                   <i> When the SLOT_CYCLE limit is r
                       eached for a burst, it may be
  474 00000000         ;//                   <i> broken by another master tryin
                       g to access this slave
  475 00000000         ;//       <o3.16..17> DEFMASTR_TYPE: Default Master Type
                       
  476 00000000         ;//                   <0=> No Default Master
  477 00000000         ;//                   <1=> Last Default Master
  478 00000000         ;//                   <2=> Fixed Default Master
  479 00000000         ;//       <o3.18..20> FIXED_DEFMSTR: Fixed Index of Defa
                       ult Master <0-7>
  480 00000000         ;//                   <i> This is the index of the Fixed
                        Default Master for this slave
  481 00000000         ;//       <o3.24..25> ARBT: Arbitration Type
  482 00000000         ;//                   <0=> Round-Robin Arbitration
  483 00000000         ;//                   <1=> Fixed Priority Arbitration
  484 00000000         ;//     </h>
  485 00000000         ;//     <h> Bus Master Slave Configuration Register 4 (M
                       ATRIX_SCFG4)
  486 00000000         ;//       <o4.0..7>   SLOT_CYCLE: Maximum number of Allo
                       wed Cycles for a Burst
  487 00000000         ;//                   <i> When the SLOT_CYCLE limit is r
                       eached for a burst, it may be
  488 00000000         ;//                   <i> broken by another master tryin
                       g to access this slave
  489 00000000         ;//       <o4.16..17> DEFMASTR_TYPE: Default Master Type
                       
  490 00000000         ;//                   <0=> No Default Master
  491 00000000         ;//                   <1=> Last Default Master



ARM Macro Assembler    Page 17 


  492 00000000         ;//                   <2=> Fixed Default Master
  493 00000000         ;//       <o4.18..20> FIXED_DEFMSTR: Fixed Index of Defa
                       ult Master <0-7>
  494 00000000         ;//                   <i> This is the index of the Fixed
                        Default Master for this slave
  495 00000000         ;//       <o4.24..25> ARBT: Arbitration Type
  496 00000000         ;//                   <0=> Round-Robin Arbitration
  497 00000000         ;//                   <1=> Fixed Priority Arbitration
  498 00000000         ;//     </h>
  499 00000000         ;//   </h>
  500 00000000 00000010 
                       MATRIX_SCFG0_Val
                               EQU              0x00000010
  501 00000000 00000010 
                       MATRIX_SCFG1_Val
                               EQU              0x00000010
  502 00000000 00000010 
                       MATRIX_SCFG2_Val
                               EQU              0x00000010
  503 00000000 00000010 
                       MATRIX_SCFG3_Val
                               EQU              0x00000010
  504 00000000 00000010 
                       MATRIX_SCFG4_Val
                               EQU              0x00000010
  505 00000000         
  506 00000000         ;//   <h> Bus Matrix Priority Registers For Slaves
  507 00000000         ;//     <h> Bus Matrix Priority Register For Slaves 0 (M
                       ATRIX_PRAS0)
  508 00000000         ;//       <i> Fixed priority of Master x for access to t
                       he selected slave.
  509 00000000         ;//       <i> The higher the number, the higher the prio
                       rity.
  510 00000000         ;//       <o0.0..1>   M0PR: Master 0 Priority
  511 00000000         ;//       <o0.4..5>   M1PR: Master 1 Priority
  512 00000000         ;//       <o0.8..9>   M2PR: Master 2 Priority
  513 00000000         ;//       <o0.12..13> M3PR: Master 3 Priority
  514 00000000         ;//       <o0.16..17> M4PR: Master 4 Priority
  515 00000000         ;//       <o0.20..21> M5PR: Master 5 Priority
  516 00000000         ;//     </h>
  517 00000000         ;//     <h> Bus Matrix Priority Register For Slaves 1 (M
                       ATRIX_PRAS1)
  518 00000000         ;//       <i> Fixed priority of Master x for access to t
                       he selected slave.
  519 00000000         ;//       <i> The higher the number, the higher the prio
                       rity.
  520 00000000         ;//       <o1.0..1>   M0PR: Master 0 Priority
  521 00000000         ;//       <o1.4..5>   M1PR: Master 1 Priority
  522 00000000         ;//       <o1.8..9>   M2PR: Master 2 Priority
  523 00000000         ;//       <o1.12..13> M3PR: Master 3 Priority
  524 00000000         ;//       <o1.16..17> M4PR: Master 4 Priority
  525 00000000         ;//       <o1.20..21> M5PR: Master 5 Priority
  526 00000000         ;//     </h>
  527 00000000         ;//     <h> Bus Matrix Priority Register For Slaves 2 (M
                       ATRIX_PRAS2)
  528 00000000         ;//       <i> Fixed priority of Master x for access to t
                       he selected slave.
  529 00000000         ;//       <i> The higher the number, the higher the prio
                       rity.



ARM Macro Assembler    Page 18 


  530 00000000         ;//       <o2.0..1>   M0PR: Master 0 Priority
  531 00000000         ;//       <o2.4..5>   M1PR: Master 1 Priority
  532 00000000         ;//       <o2.8..9>   M2PR: Master 2 Priority
  533 00000000         ;//       <o2.12..13> M3PR: Master 3 Priority
  534 00000000         ;//       <o2.16..17> M4PR: Master 4 Priority
  535 00000000         ;//       <o2.20..21> M5PR: Master 5 Priority
  536 00000000         ;//     </h>
  537 00000000         ;//     <h> Bus Matrix Priority Register For Slaves 3 (M
                       ATRIX_PRAS3)
  538 00000000         ;//       <i> Fixed priority of Master x for access to t
                       he selected slave.
  539 00000000         ;//       <i> The higher the number, the higher the prio
                       rity.
  540 00000000         ;//       <o3.0..1>   M0PR: Master 0 Priority
  541 00000000         ;//       <o3.4..5>   M1PR: Master 1 Priority
  542 00000000         ;//       <o3.8..9>   M2PR: Master 2 Priority
  543 00000000         ;//       <o3.12..13> M3PR: Master 3 Priority
  544 00000000         ;//       <o3.16..17> M4PR: Master 4 Priority
  545 00000000         ;//       <o3.20..21> M5PR: Master 5 Priority
  546 00000000         ;//     </h>
  547 00000000         ;//     <h> Bus Matrix Priority Register For Slaves 4 (M
                       ATRIX_PRAS4)
  548 00000000         ;//       <i> Fixed priority of Master x for access to t
                       he selected slave.
  549 00000000         ;//       <i> The higher the number, the higher the prio
                       rity.
  550 00000000         ;//       <o4.0..1>   M0PR: Master 0 Priority
  551 00000000         ;//       <o4.4..5>   M1PR: Master 1 Priority
  552 00000000         ;//       <o4.8..9>   M2PR: Master 2 Priority
  553 00000000         ;//       <o4.12..13> M3PR: Master 3 Priority
  554 00000000         ;//       <o4.16..17> M4PR: Master 4 Priority
  555 00000000         ;//       <o4.20..21> M5PR: Master 5 Priority
  556 00000000         ;//     </h>
  557 00000000         ;//   </h>
  558 00000000 00000000 
                       MATRIX_PRAS0_Val
                               EQU              0x00000000
  559 00000000 00000000 
                       MATRIX_PRAS1_Val
                               EQU              0x00000000
  560 00000000 00000000 
                       MATRIX_PRAS2_Val
                               EQU              0x00000000
  561 00000000 00000000 
                       MATRIX_PRAS3_Val
                               EQU              0x00000000
  562 00000000 00000000 
                       MATRIX_PRAS4_Val
                               EQU              0x00000000
  563 00000000         
  564 00000000         ;// </e> Bus Matrix (MATRIX)
  565 00000000         
  566 00000000         
  567 00000000         ;// <e> External Bus Interface (EBI)
  568 00000000 00000001 
                       EBI_SETUP
                               EQU              1
  569 00000000         
  570 00000000         ;//   <h> EBI Chip Select Assignment Register



ARM Macro Assembler    Page 19 


  571 00000000         ;//     <o0.1>      EBI_CS1A: EBI Chip Select 1 Assignme
                       nt
  572 00000000         ;//                   <0=> Assigned to Static Memory Con
                       troller
  573 00000000         ;//                   <1=> Assigned to SDRAM Controller
  574 00000000         ;//     <o0.3>      EBI_CS3A: EBI Chip Select 3 Assignme
                       nt
  575 00000000         ;//                   <0=> Assigned to Static Memory Con
                       troller
  576 00000000         ;//                   <1=> Assigned to Static Memory Con
                       troller and the SmartMedia Logic
  577 00000000         ;//     <o0.4>      EBI_CS4A: EBI Chip Select 4 Assignme
                       nt
  578 00000000         ;//                   <0=> Assigned to Static Memory Con
                       troller
  579 00000000         ;//                   <1=> Assigned to Static Memory Con
                       troller and the CompactFlash Logic (Slot 1)
  580 00000000         ;//     <o0.5>      EBI_CS5A: EBI Chip Select 5 Assignme
                       nt
  581 00000000         ;//                   <0=> Assigned to Static Memory Con
                       troller
  582 00000000         ;//                   <1=> Assigned to Static Memory Con
                       troller and the CompactFlash Logic (Slot 2)
  583 00000000         ;//     <o0.8>      EBI_DBPUC: EBI Data Bus Pull-Up Conf
                       iguration
  584 00000000         ;//                   <0=> EBI D0..D15 Data Bus bits are
                        internally pulled-up
  585 00000000         ;//                   <1=> EBI D0..D15 Data Bus bits are
                        not internally pulled-up
  586 00000000         ;//     <o0.16>     VDDIOMSEL: Memory Voltage Selection
  587 00000000         ;//                   <0=> Memories are 1.8V powered
  588 00000000         ;//                   <1=> Memories are 3.3V powered
  589 00000000         ;//   </h>
  590 00000000 00010000 
                       EBI_CSA_Val
                               EQU              0x00010000
  591 00000000         
  592 00000000         ;// </e> External Bus Interface (EBI)
  593 00000000         
  594 00000000         
  595 00000000         ;----------------------- Static Memory Controller (SMC) 
                       Definitions ------------
  596 00000000         
  597 00000000         ; Static Memory Controller (SMC) User Interface
  598 00000000 FFFFEC00 
                       SMC_BASE
                               EQU              0xFFFFEC00  ; SMC              
                                                                   Base Address
                                                            
  599 00000000         
  600 00000000                 ^                0           ; SMC Registers    
                                                                   Offsets
  601 00000000 00000000 
                       SMC_SETUP0_OFS
                               #                0x04        ; CS0 Setup Registe
                                                            r      Address Offs
                                                            et
  602 00000000 00000004 
                       SMC_PULSE0_OFS



ARM Macro Assembler    Page 20 


                               #                0x04        ; CS0 Pulse Registe
                                                            r      Address Offs
                                                            et
  603 00000000 00000008 
                       SMC_CYCLE0_OFS
                               #                0x04        ; CS0 Cycle Registe
                                                            r      Address Offs
                                                            et
  604 00000000 0000000C 
                       SMC_MODE0_OFS
                               #                0x04        ; CS0 Mode  Registe
                                                            r      Address Offs
                                                            et
  605 00000000         
  606 00000000 00000010 
                       SMC_SETUP1_OFS
                               #                0x04        ; CS1 Setup Registe
                                                            r      Address Offs
                                                            et
  607 00000000 00000014 
                       SMC_PULSE1_OFS
                               #                0x04        ; CS1 Pulse Registe
                                                            r      Address Offs
                                                            et
  608 00000000 00000018 
                       SMC_CYCLE1_OFS
                               #                0x04        ; CS1 Cycle Registe
                                                            r      Address Offs
                                                            et
  609 00000000 0000001C 
                       SMC_MODE1_OFS
                               #                0x04        ; CS1 Mode  Registe
                                                            r      Address Offs
                                                            et
  610 00000000         
  611 00000000 00000020 
                       SMC_SETUP2_OFS
                               #                0x04        ; CS2 Setup Registe
                                                            r      Address Offs
                                                            et
  612 00000000 00000024 
                       SMC_PULSE2_OFS
                               #                0x04        ; CS2 Pulse Registe
                                                            r      Address Offs
                                                            et
  613 00000000 00000028 
                       SMC_CYCLE2_OFS
                               #                0x04        ; CS2 Cycle Registe
                                                            r      Address Offs
                                                            et
  614 00000000 0000002C 
                       SMC_MODE2_OFS
                               #                0x04        ; CS2 Mode  Registe
                                                            r      Address Offs
                                                            et
  615 00000000         
  616 00000000 00000030 
                       SMC_SETUP3_OFS
                               #                0x04        ; CS3 Setup Registe



ARM Macro Assembler    Page 21 


                                                            r      Address Offs
                                                            et
  617 00000000 00000034 
                       SMC_PULSE3_OFS
                               #                0x04        ; CS3 Pulse Registe
                                                            r      Address Offs
                                                            et
  618 00000000 00000038 
                       SMC_CYCLE3_OFS
                               #                0x04        ; CS3 Cycle Registe
                                                            r      Address Offs
                                                            et
  619 00000000 0000003C 
                       SMC_MODE3_OFS
                               #                0x04        ; CS3 Mode  Registe
                                                            r      Address Offs
                                                            et
  620 00000000         
  621 00000000 00000040 
                       SMC_SETUP4_OFS
                               #                0x04        ; CS4 Setup Registe
                                                            r      Address Offs
                                                            et
  622 00000000 00000044 
                       SMC_PULSE4_OFS
                               #                0x04        ; CS4 Pulse Registe
                                                            r      Address Offs
                                                            et
  623 00000000 00000048 
                       SMC_CYCLE4_OFS
                               #                0x04        ; CS4 Cycle Registe
                                                            r      Address Offs
                                                            et
  624 00000000 0000004C 
                       SMC_MODE4_OFS
                               #                0x04        ; CS4 Mode  Registe
                                                            r      Address Offs
                                                            et
  625 00000000         
  626 00000000 00000050 
                       SMC_SETUP5_OFS
                               #                0x04        ; CS5 Setup Registe
                                                            r      Address Offs
                                                            et
  627 00000000 00000054 
                       SMC_PULSE5_OFS
                               #                0x04        ; CS5 Pulse Registe
                                                            r      Address Offs
                                                            et
  628 00000000 00000058 
                       SMC_CYCLE5_OFS
                               #                0x04        ; CS5 Cycle Registe
                                                            r      Address Offs
                                                            et
  629 00000000 0000005C 
                       SMC_MODE5_OFS
                               #                0x04        ; CS5 Mode  Registe
                                                            r      Address Offs
                                                            et



ARM Macro Assembler    Page 22 


  630 00000000         
  631 00000000 00000060 
                       SMC_SETUP6_OFS
                               #                0x04        ; CS6 Setup Registe
                                                            r      Address Offs
                                                            et
  632 00000000 00000064 
                       SMC_PULSE6_OFS
                               #                0x04        ; CS6 Pulse Registe
                                                            r      Address Offs
                                                            et
  633 00000000 00000068 
                       SMC_CYCLE6_OFS
                               #                0x04        ; CS6 Cycle Registe
                                                            r      Address Offs
                                                            et
  634 00000000 0000006C 
                       SMC_MODE6_OFS
                               #                0x04        ; CS6 Mode  Registe
                                                            r      Address Offs
                                                            et
  635 00000000         
  636 00000000 00000070 
                       SMC_SETUP7_OFS
                               #                0x04        ; CS7 Setup Registe
                                                            r      Address Offs
                                                            et
  637 00000000 00000074 
                       SMC_PULSE7_OFS
                               #                0x04        ; CS7 Pulse Registe
                                                            r      Address Offs
                                                            et
  638 00000000 00000078 
                       SMC_CYCLE7_OFS
                               #                0x04        ; CS7 Cycle Registe
                                                            r      Address Offs
                                                            et
  639 00000000 0000007C 
                       SMC_MODE7_OFS
                               #                0x04        ; CS7 Mode  Registe
                                                            r      Address Offs
                                                            et
  640 00000000         
  641 00000000         ;// <e> Static Memory Controller (SMC)
  642 00000000 00000001 
                       SMC_SETUP
                               EQU              1
  643 00000000         
  644 00000000         ;//   <e0.0> Setup Pin Configuration
  645 00000000         ;//     <o0.1>        Enable D16 .. D31 Pins
  646 00000000         ;//     <o0.2>        Enable A23 Pin
  647 00000000         ;//     <o0.3>        Enable A24 Pin
  648 00000000         ;//     <o0.4>        Enable A25 Pin
  649 00000000         ;//     <o0.10>       Enable NCS2 Pin
  650 00000000         ;//     <o0.11>       Enable NCS3 Pin
  651 00000000         ;//     <o0.12>       Enable NCS4 Pin
  652 00000000         ;//     <o0.13>       Enable NCS5 Pin
  653 00000000         ;//     <o0.14>       Enable NCS6 Pin
  654 00000000         ;//     <o0.15>       Enable NCS7 Pin



ARM Macro Assembler    Page 23 


  655 00000000         ;//   </e0.0> Setup Pin Configuration
  656 00000000 00000000 
                       SMC_PIN_SETUP
                               EQU              0x00000000
  657 00000000         
  658 00000000         ;//   <e> SMC Chip Select 0 Configuration
  659 00000000         ;//     <h> Chip Select 0 Setup Register (SMC_SETUP0)
  660 00000000         ;//       <o1.0..5>   NWE_SETUP: NWE Setup Length <0-63>
                       
  661 00000000         ;//                     <i> NWE setup length = (128*NWE_
                       SETUP[5]+NWE_SETUP[4..0]) clock cycles
  662 00000000         ;//       <o1.8..13>  NCS_WR_SETUP: NCS Setup Length in 
                       WRITE Access <0-63>
  663 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       WR_SETUP[5]+NCS_WR_SETUP[4..0]) clock cycles
  664 00000000         ;//       <o1.16..21> NRD_SETUP: NRD Setup Length <0-63>
                       
  665 00000000         ;//                     <i> NRD setup length = (128*NRD_
                       SETUP[5]+NRD_SETUP[4..0]) clock cycles
  666 00000000         ;//       <o1.24..29> NCS_RD_SETUP: NCS Setup Length in 
                       READ Access <0-63>
  667 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       RD_SETUP[5]+NCS_RD_SETUP[4..0]) clock cycles
  668 00000000         ;//     </h>
  669 00000000         ;//
  670 00000000         ;//     <h> Chip Select 0 Pulse Register (SMC_PULSE0)
  671 00000000         ;//       <o2.0..6>   NWE_PULSE: NWE Pulse Length <0-127
                       >
  672 00000000         ;//                     <i> NWE pulse length = (256*NWE_
                       PULSE[6]+NWE_PULSE[5..0]) clock cycles
  673 00000000         ;//       <o2.8..14>  NCS_WR_PULSE: NCS Pulse Length in 
                       WRITE Access <0-127>
  674 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       WR_PULSE[6]+NCS_WR_PULSE[5..0]) clock cycles
  675 00000000         ;//       <o2.16..22> NRD_PULSE: NRD Pulse Length <0-127
                       >
  676 00000000         ;//                     <i> NRD pulse length = (256*NRD_
                       PULSE[6]+NRD_PULSE[5..0]) clock cycles
  677 00000000         ;//       <o2.24..30> NCS_RD_PULSE: NCS Pulse Length in 
                       READ Access <0-127>
  678 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       RD_PULSE[6]+NCS_RD_PULSE[5..0]) clock cycles
  679 00000000         ;//     </h>
  680 00000000         ;//
  681 00000000         ;//     <h> Chip Select 0 Cycle Register (SMC_CYCLE0)
  682 00000000         ;//       <o3.0..8>   NWE_CYCLE: Total Write Cycle Lengt
                       h <0-511>
  683 00000000         ;//                     <i> Write cycle length = (NWE_CY
                       CLE[8..7]*256+NWE_CYCLE[6..0]) clock cycle
  684 00000000         ;//       <o3.16..24> NRD_CYCLE: Total Read Cycle Length
                        <0-511>
  685 00000000         ;//                     <i> Read cycle length = (NRD_CYC
                       LE[8..7]*256+NRD_CYCLE[6..0]) clock cycle
  686 00000000         ;//     </h>
  687 00000000         ;//
  688 00000000         ;//     <h> Chip Select 0 Mode Register (SMC_MODE0)
  689 00000000         ;//       <o4.0>      READ_MODE:
  690 00000000         ;//                     <0=> The read operation is contr
                       olled by the NCS signal



ARM Macro Assembler    Page 24 


  691 00000000         ;//                     <1=> The read operation is contr
                       olled by the NRD signal
  692 00000000         ;//       <o4.1>      WRITE_MODE:
  693 00000000         ;//                     <0=> The write operation is cont
                       rolled by the NCS signal
  694 00000000         ;//                     <1=> The write operation is cont
                       rolled by the NWE signal
  695 00000000         ;//       <o4.4..5>   EXNW_MODE: NWAIT Mode
  696 00000000         ;//                     <0=> Disabled
  697 00000000         ;//                     <2=> Frozen Mode
  698 00000000         ;//                     <3=> Ready Mode
  699 00000000         ;//       <o4.8>      BAT: Byte Access Type
  700 00000000         ;//                     <0=> 0
  701 00000000         ;//                     <1=> 1
  702 00000000         ;//                     <i>  0: - Write operation is con
                       trolled using: NCS, NWE, NBS0, NBS1, NBS2, NBS3
  703 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD, NBS0, NBS1, NBS2, NBS3
  704 00000000         ;//                     <i>  1: - Write operation is con
                       trolled using: NCS, NWR0, NWR1, NWR2, NWR3        
  705 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD
  706 00000000         ;//       <o4.12..13> DBW: Data Bus Width
  707 00000000         ;//                     <0=> 8-bit bus
  708 00000000         ;//                     <1=> 16-bit bus
  709 00000000         ;//                     <2=> 32-bit bus
  710 00000000         ;//       <o4.16..19> TDF_CYCLES: Data Float Time <0-15>
                       
  711 00000000         ;//       <o4.20>     TDF_MODE: TDF Optimization Enabled
                       
  712 00000000         ;//       <o4.24>     PMEN: Page Mode Enabled
  713 00000000         ;//       <o4.28..29> PS: Page Size
  714 00000000         ;//                     <0=> 4-byte page
  715 00000000         ;//                     <1=> 8-byte page
  716 00000000         ;//                     <2=> 16-byte page
  717 00000000         ;//                     <3=> 32-byte page
  718 00000000         ;//     </h>
  719 00000000         ;//   </e>
  720 00000000 00000000 
                       SMC_CS0_SETUP
                               EQU              0x00000000
  721 00000000 00000000 
                       SMC_SETUP0_Val
                               EQU              0x00000000
  722 00000000 01010101 
                       SMC_PULSE0_Val
                               EQU              0x01010101
  723 00000000 00010001 
                       SMC_CYCLE0_Val
                               EQU              0x00010001
  724 00000000 10001000 
                       SMC_MODE0_Val
                               EQU              0x10001000
  725 00000000         
  726 00000000         ;//   <e> SMC Chip Select 1 Configuration
  727 00000000         ;//     <h> Chip Select 1 Setup Register (SMC_SETUP1)
  728 00000000         ;//       <o1.0..5>   NWE_SETUP: NWE Setup Length <0-63>
                       
  729 00000000         ;//                     <i> NWE setup length = (128*NWE_



ARM Macro Assembler    Page 25 


                       SETUP[5]+NWE_SETUP[4..0]) clock cycles
  730 00000000         ;//       <o1.8..13>  NCS_WR_SETUP: NCS Setup Length in 
                       WRITE Access <0-63>
  731 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       WR_SETUP[5]+NCS_WR_SETUP[4..0]) clock cycles
  732 00000000         ;//       <o1.16..21> NRD_SETUP: NRD Setup Length <0-63>
                       
  733 00000000         ;//                     <i> NRD setup length = (128*NRD_
                       SETUP[5]+NRD_SETUP[4..0]) clock cycles
  734 00000000         ;//       <o1.24..29> NCS_RD_SETUP: NCS Setup Length in 
                       READ Access <0-63>
  735 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       RD_SETUP[5]+NCS_RD_SETUP[4..0]) clock cycles
  736 00000000         ;//     </h>
  737 00000000         ;//
  738 00000000         ;//     <h> Chip Select 1 Pulse Register (SMC_PULSE1)
  739 00000000         ;//       <o2.0..6>   NWE_PULSE: NWE Pulse Length <0-127
                       >
  740 00000000         ;//                     <i> NWE pulse length = (256*NWE_
                       PULSE[6]+NWE_PULSE[5..0]) clock cycles
  741 00000000         ;//       <o2.8..14>  NCS_WR_PULSE: NCS Pulse Length in 
                       WRITE Access <0-127>
  742 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       WR_PULSE[6]+NCS_WR_PULSE[5..0]) clock cycles
  743 00000000         ;//       <o2.16..22> NRD_PULSE: NRD Pulse Length <0-127
                       >
  744 00000000         ;//                     <i> NRD pulse length = (256*NRD_
                       PULSE[6]+NRD_PULSE[5..0]) clock cycles
  745 00000000         ;//       <o2.24..30> NCS_RD_PULSE: NCS Pulse Length in 
                       READ Access <0-127>
  746 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       RD_PULSE[6]+NCS_RD_PULSE[5..0]) clock cycles
  747 00000000         ;//     </h>
  748 00000000         ;//
  749 00000000         ;//     <h> Chip Select 1 Cycle Register (SMC_CYCLE1)
  750 00000000         ;//       <o3.0..8>   NWE_CYCLE: Total Write Cycle Lengt
                       h <0-511>
  751 00000000         ;//                     <i> Write cycle length = (NWE_CY
                       CLE[8..7]*256+NWE_CYCLE[6..0]) clock cycle
  752 00000000         ;//       <o3.16..24> NRD_CYCLE: Total Read Cycle Length
                        <0-511>
  753 00000000         ;//                     <i> Read cycle length = (NRD_CYC
                       LE[8..7]*256+NRD_CYCLE[6..0]) clock cycle
  754 00000000         ;//     </h>
  755 00000000         ;//
  756 00000000         ;//     <h> Chip Select 1 Mode Register (SMC_MODE1)
  757 00000000         ;//       <o4.0>      READ_MODE:
  758 00000000         ;//                     <0=> The read operation is contr
                       olled by the NCS signal
  759 00000000         ;//                     <1=> The read operation is contr
                       olled by the NRD signal
  760 00000000         ;//       <o4.1>      WRITE_MODE:
  761 00000000         ;//                     <0=> The write operation is cont
                       rolled by the NCS signal
  762 00000000         ;//                     <1=> The write operation is cont
                       rolled by the NWE signal
  763 00000000         ;//       <o4.4..5>   EXNW_MODE: NWAIT Mode
  764 00000000         ;//                     <0=> Disabled
  765 00000000         ;//                     <2=> Frozen Mode



ARM Macro Assembler    Page 26 


  766 00000000         ;//                     <3=> Ready Mode
  767 00000000         ;//       <o4.8>      BAT: Byte Access Type
  768 00000000         ;//                     <0=> 0
  769 00000000         ;//                     <1=> 1
  770 00000000         ;//                     <i>  0: - Write operation is con
                       trolled using: NCS, NWE, NBS0, NBS1, NBS2, NBS3
  771 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD, NBS0, NBS1, NBS2, NBS3
  772 00000000         ;//                     <i>  1: - Write operation is con
                       trolled using: NCS, NWR0, NWR1, NWR2, NWR3        
  773 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD
  774 00000000         ;//       <o4.12..13> DBW: Data Bus Width
  775 00000000         ;//                     <0=> 8-bit bus
  776 00000000         ;//                     <1=> 16-bit bus
  777 00000000         ;//                     <2=> 32-bit bus
  778 00000000         ;//       <o4.16..19> TDF_CYCLES: Data Float Time <0-15>
                       
  779 00000000         ;//       <o4.20>     TDF_MODE: TDF Optimization Enabled
                       
  780 00000000         ;//       <o4.24>     PMEN: Page Mode Enabled
  781 00000000         ;//       <o4.28..29> PS: Page Size
  782 00000000         ;//                     <0=> 4-byte page
  783 00000000         ;//                     <1=> 8-byte page
  784 00000000         ;//                     <2=> 16-byte page
  785 00000000         ;//                     <3=> 32-byte page
  786 00000000         ;//     </h>
  787 00000000         ;//   </e>
  788 00000000 00000000 
                       SMC_CS1_SETUP
                               EQU              0x00000000
  789 00000000 00000000 
                       SMC_SETUP1_Val
                               EQU              0x00000000
  790 00000000 01010101 
                       SMC_PULSE1_Val
                               EQU              0x01010101
  791 00000000 00010001 
                       SMC_CYCLE1_Val
                               EQU              0x00010001
  792 00000000 10001000 
                       SMC_MODE1_Val
                               EQU              0x10001000
  793 00000000         
  794 00000000         ;//   <e> SMC Chip Select 2 Configuration
  795 00000000         ;//     <h> Chip Select 2 Setup Register (SMC_SETUP2)
  796 00000000         ;//       <o1.0..5>   NWE_SETUP: NWE Setup Length <0-63>
                       
  797 00000000         ;//                     <i> NWE setup length = (128*NWE_
                       SETUP[5]+NWE_SETUP[4..0]) clock cycles
  798 00000000         ;//       <o1.8..13>  NCS_WR_SETUP: NCS Setup Length in 
                       WRITE Access <0-63>
  799 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       WR_SETUP[5]+NCS_WR_SETUP[4..0]) clock cycles
  800 00000000         ;//       <o1.16..21> NRD_SETUP: NRD Setup Length <0-63>
                       
  801 00000000         ;//                     <i> NRD setup length = (128*NRD_
                       SETUP[5]+NRD_SETUP[4..0]) clock cycles
  802 00000000         ;//       <o1.24..29> NCS_RD_SETUP: NCS Setup Length in 



ARM Macro Assembler    Page 27 


                       READ Access <0-63>
  803 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       RD_SETUP[5]+NCS_RD_SETUP[4..0]) clock cycles
  804 00000000         ;//     </h>
  805 00000000         ;//
  806 00000000         ;//     <h> Chip Select 2 Pulse Register (SMC_PULSE2)
  807 00000000         ;//       <o2.0..6>   NWE_PULSE: NWE Pulse Length <0-127
                       >
  808 00000000         ;//                     <i> NWE pulse length = (256*NWE_
                       PULSE[6]+NWE_PULSE[5..0]) clock cycles
  809 00000000         ;//       <o2.8..14>  NCS_WR_PULSE: NCS Pulse Length in 
                       WRITE Access <0-127>
  810 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       WR_PULSE[6]+NCS_WR_PULSE[5..0]) clock cycles
  811 00000000         ;//       <o2.16..22> NRD_PULSE: NRD Pulse Length <0-127
                       >
  812 00000000         ;//                     <i> NRD pulse length = (256*NRD_
                       PULSE[6]+NRD_PULSE[5..0]) clock cycles
  813 00000000         ;//       <o2.24..30> NCS_RD_PULSE: NCS Pulse Length in 
                       READ Access <0-127>
  814 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       RD_PULSE[6]+NCS_RD_PULSE[5..0]) clock cycles
  815 00000000         ;//     </h>
  816 00000000         ;//
  817 00000000         ;//     <h> Chip Select 2 Cycle Register (SMC_CYCLE2)
  818 00000000         ;//       <o3.0..8>   NWE_CYCLE: Total Write Cycle Lengt
                       h <0-511>
  819 00000000         ;//                     <i> Write cycle length = (NWE_CY
                       CLE[8..7]*256+NWE_CYCLE[6..0]) clock cycle
  820 00000000         ;//       <o3.16..24> NRD_CYCLE: Total Read Cycle Length
                        <0-511>
  821 00000000         ;//                     <i> Read cycle length = (NRD_CYC
                       LE[8..7]*256+NRD_CYCLE[6..0]) clock cycle
  822 00000000         ;//     </h>
  823 00000000         ;//
  824 00000000         ;//     <h> Chip Select 2 Mode Register (SMC_MODE2)
  825 00000000         ;//       <o4.0>      READ_MODE:
  826 00000000         ;//                     <0=> The read operation is contr
                       olled by the NCS signal
  827 00000000         ;//                     <1=> The read operation is contr
                       olled by the NRD signal
  828 00000000         ;//       <o4.1>      WRITE_MODE:
  829 00000000         ;//                     <0=> The write operation is cont
                       rolled by the NCS signal
  830 00000000         ;//                     <1=> The write operation is cont
                       rolled by the NWE signal
  831 00000000         ;//       <o4.4..5>   EXNW_MODE: NWAIT Mode
  832 00000000         ;//                     <0=> Disabled
  833 00000000         ;//                     <2=> Frozen Mode
  834 00000000         ;//                     <3=> Ready Mode
  835 00000000         ;//       <o4.8>      BAT: Byte Access Type
  836 00000000         ;//                     <0=> 0
  837 00000000         ;//                     <1=> 1
  838 00000000         ;//                     <i>  0: - Write operation is con
                       trolled using: NCS, NWE, NBS0, NBS1, NBS2, NBS3
  839 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD, NBS0, NBS1, NBS2, NBS3
  840 00000000         ;//                     <i>  1: - Write operation is con
                       trolled using: NCS, NWR0, NWR1, NWR2, NWR3        



ARM Macro Assembler    Page 28 


  841 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD
  842 00000000         ;//       <o4.12..13> DBW: Data Bus Width
  843 00000000         ;//                     <0=> 8-bit bus
  844 00000000         ;//                     <1=> 16-bit bus
  845 00000000         ;//                     <2=> 32-bit bus
  846 00000000         ;//       <o4.16..19> TDF_CYCLES: Data Float Time <0-15>
                       
  847 00000000         ;//       <o4.20>     TDF_MODE: TDF Optimization Enabled
                       
  848 00000000         ;//       <o4.24>     PMEN: Page Mode Enabled
  849 00000000         ;//       <o4.28..29> PS: Page Size
  850 00000000         ;//                     <0=> 4-byte page
  851 00000000         ;//                     <1=> 8-byte page
  852 00000000         ;//                     <2=> 16-byte page
  853 00000000         ;//                     <3=> 32-byte page
  854 00000000         ;//     </h>
  855 00000000         ;//   </e>
  856 00000000 00000000 
                       SMC_CS2_SETUP
                               EQU              0x00000000
  857 00000000 00000000 
                       SMC_SETUP2_Val
                               EQU              0x00000000
  858 00000000 01010101 
                       SMC_PULSE2_Val
                               EQU              0x01010101
  859 00000000 00010001 
                       SMC_CYCLE2_Val
                               EQU              0x00010001
  860 00000000 10001000 
                       SMC_MODE2_Val
                               EQU              0x10001000
  861 00000000         
  862 00000000         ;//   <e> SMC Chip Select 3 Configuration
  863 00000000         ;//     <h> Chip Select 3 Setup Register (SMC_SETUP3)
  864 00000000         ;//       <o1.0..5>   NWE_SETUP: NWE Setup Length <0-63>
                       
  865 00000000         ;//                     <i> NWE setup length = (128*NWE_
                       SETUP[5]+NWE_SETUP[4..0]) clock cycles
  866 00000000         ;//       <o1.8..13>  NCS_WR_SETUP: NCS Setup Length in 
                       WRITE Access <0-63>
  867 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       WR_SETUP[5]+NCS_WR_SETUP[4..0]) clock cycles
  868 00000000         ;//       <o1.16..21> NRD_SETUP: NRD Setup Length <0-63>
                       
  869 00000000         ;//                     <i> NRD setup length = (128*NRD_
                       SETUP[5]+NRD_SETUP[4..0]) clock cycles
  870 00000000         ;//       <o1.24..29> NCS_RD_SETUP: NCS Setup Length in 
                       READ Access <0-63>
  871 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       RD_SETUP[5]+NCS_RD_SETUP[4..0]) clock cycles
  872 00000000         ;//     </h>
  873 00000000         ;//
  874 00000000         ;//     <h> Chip Select 3 Pulse Register (SMC_PULSE3)
  875 00000000         ;//       <o2.0..6>   NWE_PULSE: NWE Pulse Length <0-127
                       >
  876 00000000         ;//                     <i> NWE pulse length = (256*NWE_
                       PULSE[6]+NWE_PULSE[5..0]) clock cycles



ARM Macro Assembler    Page 29 


  877 00000000         ;//       <o2.8..14>  NCS_WR_PULSE: NCS Pulse Length in 
                       WRITE Access <0-127>
  878 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       WR_PULSE[6]+NCS_WR_PULSE[5..0]) clock cycles
  879 00000000         ;//       <o2.16..22> NRD_PULSE: NRD Pulse Length <0-127
                       >
  880 00000000         ;//                     <i> NRD pulse length = (256*NRD_
                       PULSE[6]+NRD_PULSE[5..0]) clock cycles
  881 00000000         ;//       <o2.24..30> NCS_RD_PULSE: NCS Pulse Length in 
                       READ Access <0-127>
  882 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       RD_PULSE[6]+NCS_RD_PULSE[5..0]) clock cycles
  883 00000000         ;//     </h>
  884 00000000         ;//
  885 00000000         ;//     <h> Chip Select 3 Cycle Register (SMC_CYCLE3)
  886 00000000         ;//       <o3.0..8>   NWE_CYCLE: Total Write Cycle Lengt
                       h <0-511>
  887 00000000         ;//                     <i> Write cycle length = (NWE_CY
                       CLE[8..7]*256+NWE_CYCLE[6..0]) clock cycle
  888 00000000         ;//       <o3.16..24> NRD_CYCLE: Total Read Cycle Length
                        <0-511>
  889 00000000         ;//                     <i> Read cycle length = (NRD_CYC
                       LE[8..7]*256+NRD_CYCLE[6..0]) clock cycle
  890 00000000         ;//     </h>
  891 00000000         ;//
  892 00000000         ;//     <h> Chip Select 3 Mode Register (SMC_MODE3)
  893 00000000         ;//       <o4.0>      READ_MODE:
  894 00000000         ;//                     <0=> The read operation is contr
                       olled by the NCS signal
  895 00000000         ;//                     <1=> The read operation is contr
                       olled by the NRD signal
  896 00000000         ;//       <o4.1>      WRITE_MODE:
  897 00000000         ;//                     <0=> The write operation is cont
                       rolled by the NCS signal
  898 00000000         ;//                     <1=> The write operation is cont
                       rolled by the NWE signal
  899 00000000         ;//       <o4.4..5>   EXNW_MODE: NWAIT Mode
  900 00000000         ;//                     <0=> Disabled
  901 00000000         ;//                     <2=> Frozen Mode
  902 00000000         ;//                     <3=> Ready Mode
  903 00000000         ;//       <o4.8>      BAT: Byte Access Type
  904 00000000         ;//                     <0=> 0
  905 00000000         ;//                     <1=> 1
  906 00000000         ;//                     <i>  0: - Write operation is con
                       trolled using: NCS, NWE, NBS0, NBS1, NBS2, NBS3
  907 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD, NBS0, NBS1, NBS2, NBS3
  908 00000000         ;//                     <i>  1: - Write operation is con
                       trolled using: NCS, NWR0, NWR1, NWR2, NWR3        
  909 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD
  910 00000000         ;//       <o4.12..13> DBW: Data Bus Width
  911 00000000         ;//                     <0=> 8-bit bus
  912 00000000         ;//                     <1=> 16-bit bus
  913 00000000         ;//                     <2=> 32-bit bus
  914 00000000         ;//       <o4.16..19> TDF_CYCLES: Data Float Time <0-15>
                       
  915 00000000         ;//       <o4.20>     TDF_MODE: TDF Optimization Enabled
                       



ARM Macro Assembler    Page 30 


  916 00000000         ;//       <o4.24>     PMEN: Page Mode Enabled
  917 00000000         ;//       <o4.28..29> PS: Page Size
  918 00000000         ;//                     <0=> 4-byte page
  919 00000000         ;//                     <1=> 8-byte page
  920 00000000         ;//                     <2=> 16-byte page
  921 00000000         ;//                     <3=> 32-byte page
  922 00000000         ;//     </h>
  923 00000000         ;//   </e>
  924 00000000 00000000 
                       SMC_CS3_SETUP
                               EQU              0x00000000
  925 00000000 00000000 
                       SMC_SETUP3_Val
                               EQU              0x00000000
  926 00000000 01010101 
                       SMC_PULSE3_Val
                               EQU              0x01010101
  927 00000000 00010001 
                       SMC_CYCLE3_Val
                               EQU              0x00010001
  928 00000000 10001000 
                       SMC_MODE3_Val
                               EQU              0x10001000
  929 00000000         
  930 00000000         ;//   <e> SMC Chip Select 4 Configuration
  931 00000000         ;//     <h> Chip Select 4 Setup Register (SMC_SETUP4)
  932 00000000         ;//       <o1.0..5>   NWE_SETUP: NWE Setup Length <0-63>
                       
  933 00000000         ;//                     <i> NWE setup length = (128*NWE_
                       SETUP[5]+NWE_SETUP[4..0]) clock cycles
  934 00000000         ;//       <o1.8..13>  NCS_WR_SETUP: NCS Setup Length in 
                       WRITE Access <0-63>
  935 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       WR_SETUP[5]+NCS_WR_SETUP[4..0]) clock cycles
  936 00000000         ;//       <o1.16..21> NRD_SETUP: NRD Setup Length <0-63>
                       
  937 00000000         ;//                     <i> NRD setup length = (128*NRD_
                       SETUP[5]+NRD_SETUP[4..0]) clock cycles
  938 00000000         ;//       <o1.24..29> NCS_RD_SETUP: NCS Setup Length in 
                       READ Access <0-63>
  939 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       RD_SETUP[5]+NCS_RD_SETUP[4..0]) clock cycles
  940 00000000         ;//     </h>
  941 00000000         ;//
  942 00000000         ;//     <h> Chip Select 4 Pulse Register (SMC_PULSE4)
  943 00000000         ;//       <o2.0..6>   NWE_PULSE: NWE Pulse Length <0-127
                       >
  944 00000000         ;//                     <i> NWE pulse length = (256*NWE_
                       PULSE[6]+NWE_PULSE[5..0]) clock cycles
  945 00000000         ;//       <o2.8..14>  NCS_WR_PULSE: NCS Pulse Length in 
                       WRITE Access <0-127>
  946 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       WR_PULSE[6]+NCS_WR_PULSE[5..0]) clock cycles
  947 00000000         ;//       <o2.16..22> NRD_PULSE: NRD Pulse Length <0-127
                       >
  948 00000000         ;//                     <i> NRD pulse length = (256*NRD_
                       PULSE[6]+NRD_PULSE[5..0]) clock cycles
  949 00000000         ;//       <o2.24..30> NCS_RD_PULSE: NCS Pulse Length in 
                       READ Access <0-127>



ARM Macro Assembler    Page 31 


  950 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       RD_PULSE[6]+NCS_RD_PULSE[5..0]) clock cycles
  951 00000000         ;//     </h>
  952 00000000         ;//
  953 00000000         ;//     <h> Chip Select 4 Cycle Register (SMC_CYCLE4)
  954 00000000         ;//       <o3.0..8>   NWE_CYCLE: Total Write Cycle Lengt
                       h <0-511>
  955 00000000         ;//                     <i> Write cycle length = (NWE_CY
                       CLE[8..7]*256+NWE_CYCLE[6..0]) clock cycle
  956 00000000         ;//       <o3.16..24> NRD_CYCLE: Total Read Cycle Length
                        <0-511>
  957 00000000         ;//                     <i> Read cycle length = (NRD_CYC
                       LE[8..7]*256+NRD_CYCLE[6..0]) clock cycle
  958 00000000         ;//     </h>
  959 00000000         ;//
  960 00000000         ;//     <h> Chip Select 4 Mode Register (SMC_MODE4)
  961 00000000         ;//       <o4.0>      READ_MODE:
  962 00000000         ;//                     <0=> The read operation is contr
                       olled by the NCS signal
  963 00000000         ;//                     <1=> The read operation is contr
                       olled by the NRD signal
  964 00000000         ;//       <o4.1>      WRITE_MODE:
  965 00000000         ;//                     <0=> The write operation is cont
                       rolled by the NCS signal
  966 00000000         ;//                     <1=> The write operation is cont
                       rolled by the NWE signal
  967 00000000         ;//       <o4.4..5>   EXNW_MODE: NWAIT Mode
  968 00000000         ;//                     <0=> Disabled
  969 00000000         ;//                     <2=> Frozen Mode
  970 00000000         ;//                     <3=> Ready Mode
  971 00000000         ;//       <o4.8>      BAT: Byte Access Type
  972 00000000         ;//                     <0=> 0
  973 00000000         ;//                     <1=> 1
  974 00000000         ;//                     <i>  0: - Write operation is con
                       trolled using: NCS, NWE, NBS0, NBS1, NBS2, NBS3
  975 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD, NBS0, NBS1, NBS2, NBS3
  976 00000000         ;//                     <i>  1: - Write operation is con
                       trolled using: NCS, NWR0, NWR1, NWR2, NWR3        
  977 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD
  978 00000000         ;//       <o4.12..13> DBW: Data Bus Width
  979 00000000         ;//                     <0=> 8-bit bus
  980 00000000         ;//                     <1=> 16-bit bus
  981 00000000         ;//                     <2=> 32-bit bus
  982 00000000         ;//       <o4.16..19> TDF_CYCLES: Data Float Time <0-15>
                       
  983 00000000         ;//       <o4.20>     TDF_MODE: TDF Optimization Enabled
                       
  984 00000000         ;//       <o4.24>     PMEN: Page Mode Enabled
  985 00000000         ;//       <o4.28..29> PS: Page Size
  986 00000000         ;//                     <0=> 4-byte page
  987 00000000         ;//                     <1=> 8-byte page
  988 00000000         ;//                     <2=> 16-byte page
  989 00000000         ;//                     <3=> 32-byte page
  990 00000000         ;//     </h>
  991 00000000         ;//   </e>
  992 00000000 00000000 
                       SMC_CS4_SETUP



ARM Macro Assembler    Page 32 


                               EQU              0x00000000
  993 00000000 00000000 
                       SMC_SETUP4_Val
                               EQU              0x00000000
  994 00000000 01010101 
                       SMC_PULSE4_Val
                               EQU              0x01010101
  995 00000000 00010001 
                       SMC_CYCLE4_Val
                               EQU              0x00010001
  996 00000000 10001000 
                       SMC_MODE4_Val
                               EQU              0x10001000
  997 00000000         
  998 00000000         ;//   <e> SMC Chip Select 5 Configuration
  999 00000000         ;//     <h> Chip Select 5 Setup Register (SMC_SETUP5)
 1000 00000000         ;//       <o1.0..5>   NWE_SETUP: NWE Setup Length <0-63>
                       
 1001 00000000         ;//                     <i> NWE setup length = (128*NWE_
                       SETUP[5]+NWE_SETUP[4..0]) clock cycles
 1002 00000000         ;//       <o1.8..13>  NCS_WR_SETUP: NCS Setup Length in 
                       WRITE Access <0-63>
 1003 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       WR_SETUP[5]+NCS_WR_SETUP[4..0]) clock cycles
 1004 00000000         ;//       <o1.16..21> NRD_SETUP: NRD Setup Length <0-63>
                       
 1005 00000000         ;//                     <i> NRD setup length = (128*NRD_
                       SETUP[5]+NRD_SETUP[4..0]) clock cycles
 1006 00000000         ;//       <o1.24..29> NCS_RD_SETUP: NCS Setup Length in 
                       READ Access <0-63>
 1007 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       RD_SETUP[5]+NCS_RD_SETUP[4..0]) clock cycles
 1008 00000000         ;//     </h>
 1009 00000000         ;//
 1010 00000000         ;//     <h> Chip Select 5 Pulse Register (SMC_PULSE5)
 1011 00000000         ;//       <o2.0..6>   NWE_PULSE: NWE Pulse Length <0-127
                       >
 1012 00000000         ;//                     <i> NWE pulse length = (256*NWE_
                       PULSE[6]+NWE_PULSE[5..0]) clock cycles
 1013 00000000         ;//       <o2.8..14>  NCS_WR_PULSE: NCS Pulse Length in 
                       WRITE Access <0-127>
 1014 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       WR_PULSE[6]+NCS_WR_PULSE[5..0]) clock cycles
 1015 00000000         ;//       <o2.16..22> NRD_PULSE: NRD Pulse Length <0-127
                       >
 1016 00000000         ;//                     <i> NRD pulse length = (256*NRD_
                       PULSE[6]+NRD_PULSE[5..0]) clock cycles
 1017 00000000         ;//       <o2.24..30> NCS_RD_PULSE: NCS Pulse Length in 
                       READ Access <0-127>
 1018 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       RD_PULSE[6]+NCS_RD_PULSE[5..0]) clock cycles
 1019 00000000         ;//     </h>
 1020 00000000         ;//
 1021 00000000         ;//     <h> Chip Select 5 Cycle Register (SMC_CYCLE5)
 1022 00000000         ;//       <o3.0..8>   NWE_CYCLE: Total Write Cycle Lengt
                       h <0-511>
 1023 00000000         ;//                     <i> Write cycle length = (NWE_CY
                       CLE[8..7]*256+NWE_CYCLE[6..0]) clock cycle
 1024 00000000         ;//       <o3.16..24> NRD_CYCLE: Total Read Cycle Length



ARM Macro Assembler    Page 33 


                        <0-511>
 1025 00000000         ;//                     <i> Read cycle length = (NRD_CYC
                       LE[8..7]*256+NRD_CYCLE[6..0]) clock cycle
 1026 00000000         ;//     </h>
 1027 00000000         ;//
 1028 00000000         ;//     <h> Chip Select 5 Mode Register (SMC_MODE5)
 1029 00000000         ;//       <o4.0>      READ_MODE:
 1030 00000000         ;//                     <0=> The read operation is contr
                       olled by the NCS signal
 1031 00000000         ;//                     <1=> The read operation is contr
                       olled by the NRD signal
 1032 00000000         ;//       <o4.1>      WRITE_MODE:
 1033 00000000         ;//                     <0=> The write operation is cont
                       rolled by the NCS signal
 1034 00000000         ;//                     <1=> The write operation is cont
                       rolled by the NWE signal
 1035 00000000         ;//       <o4.4..5>   EXNW_MODE: NWAIT Mode
 1036 00000000         ;//                     <0=> Disabled
 1037 00000000         ;//                     <2=> Frozen Mode
 1038 00000000         ;//                     <3=> Ready Mode
 1039 00000000         ;//       <o4.8>      BAT: Byte Access Type
 1040 00000000         ;//                     <0=> 0
 1041 00000000         ;//                     <1=> 1
 1042 00000000         ;//                     <i>  0: - Write operation is con
                       trolled using: NCS, NWE, NBS0, NBS1, NBS2, NBS3
 1043 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD, NBS0, NBS1, NBS2, NBS3
 1044 00000000         ;//                     <i>  1: - Write operation is con
                       trolled using: NCS, NWR0, NWR1, NWR2, NWR3        
 1045 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD
 1046 00000000         ;//       <o4.12..13> DBW: Data Bus Width
 1047 00000000         ;//                     <0=> 8-bit bus
 1048 00000000         ;//                     <1=> 16-bit bus
 1049 00000000         ;//                     <2=> 32-bit bus
 1050 00000000         ;//       <o4.16..19> TDF_CYCLES: Data Float Time <0-15>
                       
 1051 00000000         ;//       <o4.20>     TDF_MODE: TDF Optimization Enabled
                       
 1052 00000000         ;//       <o4.24>     PMEN: Page Mode Enabled
 1053 00000000         ;//       <o4.28..29> PS: Page Size
 1054 00000000         ;//                     <0=> 4-byte page
 1055 00000000         ;//                     <1=> 8-byte page
 1056 00000000         ;//                     <2=> 16-byte page
 1057 00000000         ;//                     <3=> 32-byte page
 1058 00000000         ;//     </h>
 1059 00000000         ;//   </e>
 1060 00000000 00000000 
                       SMC_CS5_SETUP
                               EQU              0x00000000
 1061 00000000 00000000 
                       SMC_SETUP5_Val
                               EQU              0x00000000
 1062 00000000 01010101 
                       SMC_PULSE5_Val
                               EQU              0x01010101
 1063 00000000 00010001 
                       SMC_CYCLE5_Val
                               EQU              0x00010001



ARM Macro Assembler    Page 34 


 1064 00000000 10001000 
                       SMC_MODE5_Val
                               EQU              0x10001000
 1065 00000000         
 1066 00000000         ;//   <e> SMC Chip Select 6 Configuration
 1067 00000000         ;//     <h> Chip Select 6 Setup Register (SMC_SETUP6)
 1068 00000000         ;//       <o1.0..5>   NWE_SETUP: NWE Setup Length <0-63>
                       
 1069 00000000         ;//                     <i> NWE setup length = (128*NWE_
                       SETUP[5]+NWE_SETUP[4..0]) clock cycles
 1070 00000000         ;//       <o1.8..13>  NCS_WR_SETUP: NCS Setup Length in 
                       WRITE Access <0-63>
 1071 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       WR_SETUP[5]+NCS_WR_SETUP[4..0]) clock cycles
 1072 00000000         ;//       <o1.16..21> NRD_SETUP: NRD Setup Length <0-63>
                       
 1073 00000000         ;//                     <i> NRD setup length = (128*NRD_
                       SETUP[5]+NRD_SETUP[4..0]) clock cycles
 1074 00000000         ;//       <o1.24..29> NCS_RD_SETUP: NCS Setup Length in 
                       READ Access <0-63>
 1075 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       RD_SETUP[5]+NCS_RD_SETUP[4..0]) clock cycles
 1076 00000000         ;//     </h>
 1077 00000000         ;//
 1078 00000000         ;//     <h> Chip Select 6 Pulse Register (SMC_PULSE6)
 1079 00000000         ;//       <o2.0..6>   NWE_PULSE: NWE Pulse Length <0-127
                       >
 1080 00000000         ;//                     <i> NWE pulse length = (256*NWE_
                       PULSE[6]+NWE_PULSE[5..0]) clock cycles
 1081 00000000         ;//       <o2.8..14>  NCS_WR_PULSE: NCS Pulse Length in 
                       WRITE Access <0-127>
 1082 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       WR_PULSE[6]+NCS_WR_PULSE[5..0]) clock cycles
 1083 00000000         ;//       <o2.16..22> NRD_PULSE: NRD Pulse Length <0-127
                       >
 1084 00000000         ;//                     <i> NRD pulse length = (256*NRD_
                       PULSE[6]+NRD_PULSE[5..0]) clock cycles
 1085 00000000         ;//       <o2.24..30> NCS_RD_PULSE: NCS Pulse Length in 
                       READ Access <0-127>
 1086 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       RD_PULSE[6]+NCS_RD_PULSE[5..0]) clock cycles
 1087 00000000         ;//     </h>
 1088 00000000         ;//
 1089 00000000         ;//     <h> Chip Select 6 Cycle Register (SMC_CYCLE6)
 1090 00000000         ;//       <o3.0..8>   NWE_CYCLE: Total Write Cycle Lengt
                       h <0-511>
 1091 00000000         ;//                     <i> Write cycle length = (NWE_CY
                       CLE[8..7]*256+NWE_CYCLE[6..0]) clock cycle
 1092 00000000         ;//       <o3.16..24> NRD_CYCLE: Total Read Cycle Length
                        <0-511>
 1093 00000000         ;//                     <i> Read cycle length = (NRD_CYC
                       LE[8..7]*256+NRD_CYCLE[6..0]) clock cycle
 1094 00000000         ;//     </h>
 1095 00000000         ;//
 1096 00000000         ;//     <h> Chip Select 6 Mode Register (SMC_MODE6)
 1097 00000000         ;//       <o4.0>      READ_MODE:
 1098 00000000         ;//                     <0=> The read operation is contr
                       olled by the NCS signal
 1099 00000000         ;//                     <1=> The read operation is contr



ARM Macro Assembler    Page 35 


                       olled by the NRD signal
 1100 00000000         ;//       <o4.1>      WRITE_MODE:
 1101 00000000         ;//                     <0=> The write operation is cont
                       rolled by the NCS signal
 1102 00000000         ;//                     <1=> The write operation is cont
                       rolled by the NWE signal
 1103 00000000         ;//       <o4.4..5>   EXNW_MODE: NWAIT Mode
 1104 00000000         ;//                     <0=> Disabled
 1105 00000000         ;//                     <2=> Frozen Mode
 1106 00000000         ;//                     <3=> Ready Mode
 1107 00000000         ;//       <o4.8>      BAT: Byte Access Type
 1108 00000000         ;//                     <0=> 0
 1109 00000000         ;//                     <1=> 1
 1110 00000000         ;//                     <i>  0: - Write operation is con
                       trolled using: NCS, NWE, NBS0, NBS1, NBS2, NBS3
 1111 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD, NBS0, NBS1, NBS2, NBS3
 1112 00000000         ;//                     <i>  1: - Write operation is con
                       trolled using: NCS, NWR0, NWR1, NWR2, NWR3        
 1113 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD
 1114 00000000         ;//       <o4.12..13> DBW: Data Bus Width
 1115 00000000         ;//                     <0=> 8-bit bus
 1116 00000000         ;//                     <1=> 16-bit bus
 1117 00000000         ;//                     <2=> 32-bit bus
 1118 00000000         ;//       <o4.16..19> TDF_CYCLES: Data Float Time <0-15>
                       
 1119 00000000         ;//       <o4.20>     TDF_MODE: TDF Optimization Enabled
                       
 1120 00000000         ;//       <o4.24>     PMEN: Page Mode Enabled
 1121 00000000         ;//       <o4.28..29> PS: Page Size
 1122 00000000         ;//                     <0=> 4-byte page
 1123 00000000         ;//                     <1=> 8-byte page
 1124 00000000         ;//                     <2=> 16-byte page
 1125 00000000         ;//                     <3=> 32-byte page
 1126 00000000         ;//     </h>
 1127 00000000         ;//   </e>
 1128 00000000 00000000 
                       SMC_CS6_SETUP
                               EQU              0x00000000
 1129 00000000 00000000 
                       SMC_SETUP6_Val
                               EQU              0x00000000
 1130 00000000 01010101 
                       SMC_PULSE6_Val
                               EQU              0x01010101
 1131 00000000 00010001 
                       SMC_CYCLE6_Val
                               EQU              0x00010001
 1132 00000000 10001000 
                       SMC_MODE6_Val
                               EQU              0x10001000
 1133 00000000         
 1134 00000000         ;//   <e> SMC Chip Select 7 Configuration
 1135 00000000         ;//     <h> Chip Select 7 Setup Register (SMC_SETUP7)
 1136 00000000         ;//       <o1.0..5>   NWE_SETUP: NWE Setup Length <0-63>
                       
 1137 00000000         ;//                     <i> NWE setup length = (128*NWE_
                       SETUP[5]+NWE_SETUP[4..0]) clock cycles



ARM Macro Assembler    Page 36 


 1138 00000000         ;//       <o1.8..13>  NCS_WR_SETUP: NCS Setup Length in 
                       WRITE Access <0-63>
 1139 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       WR_SETUP[5]+NCS_WR_SETUP[4..0]) clock cycles
 1140 00000000         ;//       <o1.16..21> NRD_SETUP: NRD Setup Length <0-63>
                       
 1141 00000000         ;//                     <i> NRD setup length = (128*NRD_
                       SETUP[5]+NRD_SETUP[4..0]) clock cycles
 1142 00000000         ;//       <o1.24..29> NCS_RD_SETUP: NCS Setup Length in 
                       READ Access <0-63>
 1143 00000000         ;//                     <i> NCS setup length = (128*NCS_
                       RD_SETUP[5]+NCS_RD_SETUP[4..0]) clock cycles
 1144 00000000         ;//     </h>
 1145 00000000         ;//
 1146 00000000         ;//     <h> Chip Select 7 Pulse Register (SMC_PULSE7)
 1147 00000000         ;//       <o2.0..6>   NWE_PULSE: NWE Pulse Length <0-127
                       >
 1148 00000000         ;//                     <i> NWE pulse length = (256*NWE_
                       PULSE[6]+NWE_PULSE[5..0]) clock cycles
 1149 00000000         ;//       <o2.8..14>  NCS_WR_PULSE: NCS Pulse Length in 
                       WRITE Access <0-127>
 1150 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       WR_PULSE[6]+NCS_WR_PULSE[5..0]) clock cycles
 1151 00000000         ;//       <o2.16..22> NRD_PULSE: NRD Pulse Length <0-127
                       >
 1152 00000000         ;//                     <i> NRD pulse length = (256*NRD_
                       PULSE[6]+NRD_PULSE[5..0]) clock cycles
 1153 00000000         ;//       <o2.24..30> NCS_RD_PULSE: NCS Pulse Length in 
                       READ Access <0-127>
 1154 00000000         ;//                     <i> NCS pulse length = (256*NCS_
                       RD_PULSE[6]+NCS_RD_PULSE[5..0]) clock cycles
 1155 00000000         ;//     </h>
 1156 00000000         ;//
 1157 00000000         ;//     <h> Chip Select 7 Cycle Register (SMC_CYCLE7)
 1158 00000000         ;//       <o3.0..8>   NWE_CYCLE: Total Write Cycle Lengt
                       h <0-511>
 1159 00000000         ;//                     <i> Write cycle length = (NWE_CY
                       CLE[8..7]*256+NWE_CYCLE[6..0]) clock cycle
 1160 00000000         ;//       <o3.16..24> NRD_CYCLE: Total Read Cycle Length
                        <0-511>
 1161 00000000         ;//                     <i> Read cycle length = (NRD_CYC
                       LE[8..7]*256+NRD_CYCLE[6..0]) clock cycle
 1162 00000000         ;//     </h>
 1163 00000000         ;//
 1164 00000000         ;//     <h> Chip Select 7 Mode Register (SMC_MODE7)
 1165 00000000         ;//       <o4.0>      READ_MODE:
 1166 00000000         ;//                     <0=> The read operation is contr
                       olled by the NCS signal
 1167 00000000         ;//                     <1=> The read operation is contr
                       olled by the NRD signal
 1168 00000000         ;//       <o4.1>      WRITE_MODE:
 1169 00000000         ;//                     <0=> The write operation is cont
                       rolled by the NCS signal
 1170 00000000         ;//                     <1=> The write operation is cont
                       rolled by the NWE signal
 1171 00000000         ;//       <o4.4..5>   EXNW_MODE: NWAIT Mode
 1172 00000000         ;//                     <0=> Disabled
 1173 00000000         ;//                     <2=> Frozen Mode
 1174 00000000         ;//                     <3=> Ready Mode



ARM Macro Assembler    Page 37 


 1175 00000000         ;//       <o4.8>      BAT: Byte Access Type
 1176 00000000         ;//                     <0=> 0
 1177 00000000         ;//                     <1=> 1
 1178 00000000         ;//                     <i>  0: - Write operation is con
                       trolled using: NCS, NWE, NBS0, NBS1, NBS2, NBS3
 1179 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD, NBS0, NBS1, NBS2, NBS3
 1180 00000000         ;//                     <i>  1: - Write operation is con
                       trolled using: NCS, NWR0, NWR1, NWR2, NWR3        
 1181 00000000         ;//                     <i>     - Read  operation is con
                       trolled using: NCS, NRD
 1182 00000000         ;//       <o4.12..13> DBW: Data Bus Width
 1183 00000000         ;//                     <0=> 8-bit bus
 1184 00000000         ;//                     <1=> 16-bit bus
 1185 00000000         ;//                     <2=> 32-bit bus
 1186 00000000         ;//       <o4.16..19> TDF_CYCLES: Data Float Time <0-15>
                       
 1187 00000000         ;//       <o4.20>     TDF_MODE: TDF Optimization Enabled
                       
 1188 00000000         ;//       <o4.24>     PMEN: Page Mode Enabled
 1189 00000000         ;//       <o4.28..29> PS: Page Size
 1190 00000000         ;//                     <0=> 4-byte page
 1191 00000000         ;//                     <1=> 8-byte page
 1192 00000000         ;//                     <2=> 16-byte page
 1193 00000000         ;//                     <3=> 32-byte page
 1194 00000000         ;//     </h>
 1195 00000000         ;//   </e>
 1196 00000000 00000000 
                       SMC_CS7_SETUP
                               EQU              0x00000000
 1197 00000000 00000000 
                       SMC_SETUP7_Val
                               EQU              0x00000000
 1198 00000000 01010101 
                       SMC_PULSE7_Val
                               EQU              0x01010101
 1199 00000000 00010001 
                       SMC_CYCLE7_Val
                               EQU              0x00010001
 1200 00000000 10001000 
                       SMC_MODE7_Val
                               EQU              0x10001000
 1201 00000000         
 1202 00000000         ;// </e> Static Memory Controller (SMC)
 1203 00000000         
 1204 00000000         
 1205 00000000         ;----------------------- SDRAM Controller (SDRAMC) Defin
                       itions -----------------
 1206 00000000         
 1207 00000000         ; SDRAM Controller (SDRAMC) User Interface
 1208 00000000 FFFFEA00 
                       SDRAMC_BASE
                               EQU              0xFFFFEA00  ; SDRAMC           
                                                                  Base Address
 1209 00000000 00000000 
                       SDRAMC_MR_OFS
                               EQU              0x00        ; Mode Register    
                                                                  Address Offse
                                                            tt



ARM Macro Assembler    Page 38 


 1210 00000000 00000004 
                       SDRAMC_TR_OFS
                               EQU              0x04        ; Refresh Timer Reg
                                                            ister Address Offse
                                                            tt
 1211 00000000 00000008 
                       SDRAMC_CR_OFS
                               EQU              0x08        ; Configuration Reg
                                                            ister Address Offse
                                                            tt
 1212 00000000 00000010 
                       SDRAMC_LPR_OFS
                               EQU              0x10        ; Low Power Registe
                                                            r     Address Offse
                                                            tt
 1213 00000000 00000024 
                       SDRAMC_MDR_OFS
                               EQU              0x24        ; Memory Device Reg
                                                            ister Address Offse
                                                            tt
 1214 00000000         
 1215 00000000         ; Constants
 1216 00000000 00000000 
                       CMD_NORMAL
                               EQU              0x00        ; SDRAM Normal Mode
                                                            
 1217 00000000 00000001 
                       CMD_NOP EQU              0x01        ; SDRAM NOP Command
                                                            
 1218 00000000 00000002 
                       CMD_PRCGALL
                               EQU              0x02        ; SDRAM All Banks P
                                                            recharge Command
 1219 00000000 00000003 
                       CMD_LMR EQU              0x03        ; SDRAM Load Mode R
                                                            egister Command
 1220 00000000 00000004 
                       CMD_RFSH
                               EQU              0x04        ; SDRAM Refresh Com
                                                            mand
 1221 00000000         
 1222 00000000         ;// <e> SDRAM Controller (SDRAMC)
 1223 00000000 00000001 
                       SDRAMC_SETUP
                               EQU              1
 1224 00000000         
 1225 00000000         ;//   <e0.0> Setup Pin Configuration
 1226 00000000         ;//     <o0.1>      Enable D16 .. D31 Pins
 1227 00000000         ;//     <o0.2>      Enable A23 Pin
 1228 00000000         ;//     <o0.3>      Enable A24 Pin
 1229 00000000         ;//     <o0.4>      Enable A25 Pin
 1230 00000000         ;//   </e0.0> Setup Pin Configuration
 1231 00000000 00000003 
                       SDRAM_PIN_SETUP
                               EQU              0x00000003
 1232 00000000         
 1233 00000000         ;//   <h> Refresh Timer Register (SDRAMC_TR)
 1234 00000000         ;//     <o0.0..11>  COUNT: SDRAMC Refresh Timer Count <0
                       -4095>



ARM Macro Assembler    Page 39 


 1235 00000000         ;//                 <i> This 12-bit field is loaded into
                        a timer that generates
 1236 00000000         ;//                 <i> the refresh pulse
 1237 00000000         ;//   </h>
 1238 00000000 000005DD 
                       SDRAMC_TR_Val
                               EQU              0x000005DD
 1239 00000000         
 1240 00000000         ;//   <h> Configuration Register (SDRAMC_CR)
 1241 00000000         ;//     <o0.0..1>   NC: Number of Column Bits
 1242 00000000         ;//                 <0=> 8  <1=> 9  <2=> 10 <3=> 11
 1243 00000000         ;//     <o0.2..3>   NR: Number of Row Bits
 1244 00000000         ;//                 <0=> 11 <1=> 12 <2=> 13
 1245 00000000         ;//     <o0.4>      NB: Number of Banks
 1246 00000000         ;//                 <0=> 2  <1=> 4
 1247 00000000         ;//     <o0.5..6>   CAS: CAS Latency
 1248 00000000         ;//                 <1=> 1  <2=> 2  <3=> 3
 1249 00000000         ;//     <o0.7>      DBW: Data Bus Width
 1250 00000000         ;//                 <0=> 32 bits              <1=> 16 bi
                       ts
 1251 00000000         ;//     <o0.8..11>  TWR: Write Recovery Delay <0-15>
 1252 00000000         ;//                 <i> Defines Write Recovery Time, in 
                       cycles
 1253 00000000         ;//     <o0.12..15> TRC: Row Cycle Delay      <0-15>
 1254 00000000         ;//                 <i> Defines delay between Refresh an
                       d an Activate 
 1255 00000000         ;//                 <i> Command, in cycles
 1256 00000000         ;//     <o0.16..19> TRP: Row Precharge Delay  <0-15>
 1257 00000000         ;//                 <i> Defines delay between Precharge 
                       Command
 1258 00000000         ;//                 <i> and another Command, in cycles
 1259 00000000         ;//     <o0.20..23> TRCD: Row to Column Delay <0-15>
 1260 00000000         ;//                 <i> Defines delay between Activate C
                       ommand
 1261 00000000         ;//                 <i> and a Read/Write Command, in cyc
                       les
 1262 00000000         ;//     <o0.24..27> TRAS: Active to Precharge Delay <0-1
                       5>
 1263 00000000         ;//                 <i> Defines delay between Activate C
                       ommand
 1264 00000000         ;//                 <i> and a Precharge Command, in cycl
                       es
 1265 00000000         ;//     <o0.28..31> TXSR: Exit Self Refresh to Active De
                       lay <0-15>
 1266 00000000         ;//                 <i> Defines delay between SCKE set h
                       igh
 1267 00000000         ;//                 <i> and an Activate Command, in cycl
                       es
 1268 00000000         ;//   </h>
 1269 00000000 85227259 
                       SDRAMC_CR_Val
                               EQU              0x85227259
 1270 00000000         
 1271 00000000         ;//   <h> Low Power Register (SDRAMC_LPR)
 1272 00000000         ;//     <o0.0..1>   LPCB: Low-power Configuration Bits
 1273 00000000         ;//                 <0=> Low-power feature inhibited
 1274 00000000         ;//                 <1=> Self-refresh command issued aft
                       er access
 1275 00000000         ;//                 <2=> Power-down command issued after



ARM Macro Assembler    Page 40 


                        access
 1276 00000000         ;//                 <3=> Deep Power-down command issued 
                       (for low-power SDRAM)
 1277 00000000         ;//     <o0.4..6>   PASR: Partial Array Self-refresh (on
                       ly for low-power SDRAM)
 1278 00000000         ;//     <o0.8..9>   TCSR: Temperature Compensated Self-r
                       efresh (only for low-power SDRAM) 
 1279 00000000         ;//     <o0.10..11> DS: Drive Strength (only for low-pow
                       er SDRAM) 
 1280 00000000         ;//     <o0.12..13> TIMEOUT: Time to define when low-pow
                       er mode is enabled
 1281 00000000         ;//                 <0=> Low-power mode activated immedi
                       ately after last transfer
 1282 00000000         ;//                 <1=> Low-power mode activated 64 clo
                       ck cycles after last transfer
 1283 00000000         ;//                 <2=> Low-power mode activated 128 cl
                       ock cycles after last transfer
 1284 00000000         ;//   </h>
 1285 00000000 00000000 
                       SDRAMC_LPR_Val
                               EQU              0x00000000
 1286 00000000         
 1287 00000000         ;//   <h> Memory Device Register (SDRAMC_MDR)
 1288 00000000         ;//     <o0.0..1>     MD: Memory Device Type
 1289 00000000         ;//                 <0=> SDRAM  <1=> Low-power SDRAM
 1290 00000000         ;//   </h>
 1291 00000000 00000000 
                       SDRAMC_MDR_Val
                               EQU              0x00000000
 1292 00000000         
 1293 00000000         ;// </e> SDRAM Controller (SDRAMC)
 1294 00000000         
 1295 00000000         
 1296 00000000         ;----------------------- Watchdog (WDT) Definitions ----
                       ------------------------
 1297 00000000         
 1298 00000000         ; Watchdog
 1299 00000000 FFFFFD40 
                       WDT_BASE
                               EQU              0xFFFFFD40  ; WDT              
                                                                   Base Address
                                                            
 1300 00000000 00000004 
                       WDT_MR_OFS
                               EQU              0x04        ; Watchdog Timer Mo
                                                            de Reg Address Offs
                                                            et
 1301 00000000         
 1302 00000000         ;// <e0.15> Watchdog Disable
 1303 00000000         ;// </e>
 1304 00000000 00008000 
                       WDT_Val EQU              0x00008000
 1305 00000000         
 1306 00000000         
 1307 00000000         ;----------------------- Cache Definitions -------------
                       ------------------------
 1308 00000000         
 1309 00000000         ; Cache
 1310 00000000         



ARM Macro Assembler    Page 41 


 1311 00000000         ; Constants
 1312 00000000 00001000 
                       ICACHE_ENABLE
                               EQU              (1<<12)     ; Instruction Cache
                                                             Enable Bit
 1313 00000000         
 1314 00000000         ;// <e> Instruction Cache Enable
 1315 00000000         ;// </e>
 1316 00000000 00000001 
                       ICACHE_SETUP
                               EQU              1
 1317 00000000         
 1318 00000000         ;----------------------- Handler Definitions -----------
                       ------------------------
 1319 00000000         
 1320 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
 1321 00000000         
 1322 00000000 00000010 
                       ARM_MODE_USR
                               EQU              0x10
 1323 00000000 00000011 
                       ARM_MODE_FIQ
                               EQU              0x11
 1324 00000000 00000012 
                       ARM_MODE_IRQ
                               EQU              0x12
 1325 00000000 00000013 
                       ARM_MODE_SVC
                               EQU              0x13
 1326 00000000 00000017 
                       ARM_MODE_ABT
                               EQU              0x17
 1327 00000000 0000001B 
                       ARM_MODE_UND
                               EQU              0x1B
 1328 00000000 0000001F 
                       ARM_MODE_SYS
                               EQU              0x1F
 1329 00000000         
 1330 00000000 00000080 
                       I_BIT   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
 1331 00000000 00000040 
                       F_BIT   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
 1332 00000000         
 1333 00000000 FFFFF000 
                       AT91C_BASE_AIC
                               EQU              0xFFFFF000
 1334 00000000 00000100 
                       AIC_IVR EQU              0x100
 1335 00000000 00000130 
                       AIC_EOICR
                               EQU              0x130
 1336 00000000         
 1337 00000000         
 1338 00000000         
 1339 00000000         ;----------------------- CODE --------------------------



ARM Macro Assembler    Page 42 


                       ------------------------
 1340 00000000         
 1341 00000000                 PRESERVE8
 1342 00000000         
 1343 00000000         
 1344 00000000         ; Area Definition and Entry Point
 1345 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
 1346 00000000         
 1347 00000000                 AREA             RESET, CODE, READONLY
 1348 00000000                 ARM
 1349 00000000         
 1350 00000000                 IF               :LNOT::DEF:__EVAL
 1351 00000000                 IF               :DEF:SIZE_INT_INFO
 1357                          ENDIF
 1358 00000000                 ENDIF
 1359 00000000         
 1360 00000000                 IF               :DEF:__RTX
 1362                          ENDIF
 1363 00000000         
 1364 00000000         ; Exception Vectors
 1365 00000000         ;  Mapped to Address 0.
 1366 00000000         ;  Absolute addressing mode must be used.
 1367 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
 1368 00000000         
 1369 00000000 E59FF018 
                       Vectors LDR              PC,Reset_Addr
 1370 00000004 E59FF018        LDR              PC,Undef_Addr
 1371 00000008 E59FF018        LDR              PC,SWI_Addr
 1372 0000000C E59FF018        LDR              PC,PAbt_Addr
 1373 00000010 E59FF018        LDR              PC,DAbt_Addr
 1374 00000014         ; Reserved vector is used for image size information
 1375 00000014                 IF               :DEF:__EVAL
 1378 00000014                 IF               :DEF:SIZE_INT_INFO
 1385 00000014 E1A00000        NOP
 1386 00000018                 ENDIF
 1387 00000018                 ENDIF
 1388 00000018 E51FFF20        LDR              PC,[PC,#-0xF20] ; Vector From A
                                                            IC_IVR
 1389 0000001C E51FFF20        LDR              PC,[PC,#-0xF20] ; Vector From A
                                                            IC_FVR
 1390 00000020         
 1391 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
 1392 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
 1393 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
 1394 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
 1395 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
 1396 00000034 00000000        DCD              0           ; Reserved Address



ARM Macro Assembler    Page 43 


 1397 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
 1398 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
 1399 00000040         
 1400 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
 1401 00000044                 IF               :LNOT::DEF:__RTX
 1402 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
 1403 00000048                 ENDIF
 1404 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
 1405 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
 1406 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
 1407 00000054 E24EE004        SUB              lr, lr, #4
 1408 00000058 E92D4000        STMFD            sp!, {lr}
 1409 0000005C E14FE000        MRS              lr, SPSR
 1410 00000060 E92D4003        STMFD            sp!, {r0,r1,lr}
 1411 00000064         ; Write in the IVR to support Protect Mode */
 1412 00000064 E59FE21C        LDR              lr, =AT91C_BASE_AIC
 1413 00000068 E59E0100        LDR              r0, [r14, #AIC_IVR]
 1414 0000006C E58EE100        STR              lr, [r14, #AIC_IVR]
 1415 00000070         
 1416 00000070         ; Branch to interrupt handler in Supervisor mode */
 1417 00000070 E321F013        MSR              CPSR_c, #ARM_MODE_SVC
 1418 00000074 E92D501E        STMFD            sp!, {r1-r4, r12, lr}
 1419 00000078 E1A0E00F        MOV              lr, pc
 1420 0000007C E12FFF10        BX               r0
 1421 00000080 E8BD501E        LDMIA            sp!, {r1-r4, r12, lr}
 1422 00000084 E321F092        MSR              CPSR_c, #ARM_MODE_IRQ :OR: I_BI
T
 1423 00000088         
 1424 00000088         ; Acknowledge interrupt */
 1425 00000088 E59FE1F8        LDR              lr, =AT91C_BASE_AIC
 1426 0000008C E58EE130        STR              lr, [r14, #AIC_EOICR]
 1427 00000090         
 1428 00000090         ; Restore interrupt context and branch back to calling c
                       ode
 1429 00000090 E8BD4003        LDMIA            sp!, {r0,r1,lr}
 1430 00000094 E16FF00E        MSR              SPSR_cxsf, lr
 1431 00000098 E8FD8000        LDMIA            sp!, {pc}^
 1432 0000009C EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
 1433 000000A0         
 1434 000000A0         
 1435 000000A0         ; Reset Handler
 1436 000000A0         
 1437 000000A0                 EXPORT           Reset_Handler



ARM Macro Assembler    Page 44 


 1438 000000A0         Reset_Handler
 1439 000000A0         
 1440 000000A0         
 1441 000000A0         ; Setup Enhanced Embedded Flash Controller -------------
                       ------------------------
 1442 000000A0         
 1443 000000A0                 IF               EEFC_SETUP != 0
 1444 000000A0 E59F01E4        LDR              R0, =EEFC_FMR_Adr
 1445 000000A4 E3A01C02        LDR              R1, =EEFC_FMR_Val
 1446 000000A8 E5801000        STR              R1, [R0, #0]
 1447 000000AC                 ENDIF
 1448 000000AC         
 1449 000000AC         
 1450 000000AC         ; Setup Power Management Controller (PMC) --------------
                       ------------------------
 1451 000000AC         
 1452 000000AC                 IF               (:LNOT::DEF:NO_PMC_INIT):LAND:(
PMC_SETUP != 0)
 1453 000000AC E59F01DC        LDR              R0, =PMC_BASE
 1454 000000B0         
 1455 000000B0         ; System Clock Enable
 1456 000000B0 E59F11DC        LDR              R1, =PMC_SCER_Val
 1457 000000B4 E5801000        STR              R1, [R0, #PMC_SCER_OFS]
 1458 000000B8         
 1459 000000B8         ; Peripheral Clock Enable
 1460 000000B8 E59F11D8        LDR              R1, =PMC_PCER_Val
 1461 000000BC E5801010        STR              R1, [R0, #PMC_PCER_OFS]
 1462 000000C0         
 1463 000000C0         ; Setup Main Oscillator
 1464 000000C0                 IF               (CKGR_MOR_Val:AND:PMC_MOSCEN) !
= 0
 1465 000000C0 E59F11D4        LDR              R1, =CKGR_MOR_Val
 1466 000000C4 E5801020        STR              R1, [R0, #CKGR_MOR_OFS]
 1467 000000C8         
 1468 000000C8         ; Wait until Main Oscillator is stabilized
 1469 000000C8 E5902068 
                       MOSCS_Loop
                               LDR              R2, [R0, #PMC_SR_OFS]
 1470 000000CC E2122001        ANDS             R2, R2, #PMC_MOSCS
 1471 000000D0 0AFFFFFC        BEQ              MOSCS_Loop
 1472 000000D4                 ENDIF
 1473 000000D4         
 1474 000000D4         ; Setup the PLL A
 1475 000000D4                 IF               (CKGR_PLLAR_Val:AND:PMC_MUL) !=
 0
 1476 000000D4 E59F11C4        LDR              R1, =CKGR_PLLAR_Val
 1477 000000D8 E5801028        STR              R1, [R0, #CKGR_PLLAR_OFS]
 1478 000000DC         
 1479 000000DC         ; Wait until PLL A is stabilized
 1480 000000DC E5902068 
                       PLLA_Loop
                               LDR              R2, [R0, #PMC_SR_OFS]
 1481 000000E0 E2122002        ANDS             R2, R2, #PMC_LOCKA
 1482 000000E4 0AFFFFFC        BEQ              PLLA_Loop
 1483 000000E8                 ENDIF
 1484 000000E8         
 1485 000000E8         ; Setup the PLL B
 1486 000000E8                 IF               (CKGR_PLLBR_Val:AND:PMC_MUL) !=
 0



ARM Macro Assembler    Page 45 


 1494                          ENDIF
 1495 000000E8         
 1496 000000E8         ; Setup the Master Clock and the Processor Clock
 1497 000000E8 E3A01001        LDR              R1, =PMC_MCKR_Val
 1498 000000EC E3A02000        LDR              R2, =(PMC_MCKR_Val:AND:0x000000
1C)
 1499 000000F0         
 1500 000000F0         ; Program PRES field only
 1501 000000F0 E5802030        STR              R2, [R0, #PMC_MCKR_OFS]
 1502 000000F4         
 1503 000000F4         ; Wait until Main Master Clock is ready
 1504 000000F4 E5902068 
                       MCKR_Loop1
                               LDR              R2, [R0, #PMC_SR_OFS]
 1505 000000F8 E2122008        ANDS             R2, R2, #PMC_MCKRDY
 1506 000000FC 0AFFFFFC        BEQ              MCKR_Loop1
 1507 00000100         
 1508 00000100         ; Program all fields
 1509 00000100 E5801030        STR              R1, [R0, #PMC_MCKR_OFS]
 1510 00000104         
 1511 00000104         ; Wait until Main Master Clock is ready
 1512 00000104 E5902068 
                       MCKR_Loop2
                               LDR              R2, [R0, #PMC_SR_OFS]
 1513 00000108 E2122008        ANDS             R2, R2, #PMC_MCKRDY
 1514 0000010C 0AFFFFFC        BEQ              MCKR_Loop2
 1515 00000110         
 1516 00000110         ; Setup Programmable Clock Register 0
 1517 00000110 E3A01001        LDR              R1, =PMC_PCK0_Val
 1518 00000114 E5801040        STR              R1, [R0, #PMC_PCK0_OFS]
 1519 00000118         
 1520 00000118         ; Setup Programmable Clock Register 1
 1521 00000118 E3A01005        LDR              R1, =PMC_PCK1_Val
 1522 0000011C E5801044        STR              R1, [R0, #PMC_PCK1_OFS]
 1523 00000120         
 1524 00000120         ; Setup Programmable Clock Register 2
 1525 00000120 E3A01000        LDR              R1, =PMC_PCK2_Val
 1526 00000124 E5801048        STR              R1, [R0, #PMC_PCK2_OFS]
 1527 00000128         
 1528 00000128         ; Setup Programmable Clock Register 3
 1529 00000128 E3A01000        LDR              R1, =PMC_PCK3_Val
 1530 0000012C E580104C        STR              R1, [R0, #PMC_PCK3_OFS]
 1531 00000130                 ENDIF                        ; of IF      (:LNOT
                                                            ::DEF:NO_PMC_INIT):
                                                            LAND:(PMC_SETUP != 
                                                            0)
 1532 00000130         
 1533 00000130         
 1534 00000130         ; Setup Static Memory Controller (SMC) -----------------
                       ------------------------
 1535 00000130         
 1536 00000130         ; Setup Static Memory Controller if enabled
 1537 00000130                 IF               SMC_SETUP != 0
 1538 00000130 E59F016C        LDR              R0, =SMC_BASE
 1539 00000134         
 1540 00000134         ; Setup pins
 1541 00000134                 IF               ((SMC_PIN_SETUP:AND:(1 <<  0)) 
!= 0)
 1582                          ENDIF                        ; of IF      ((SMC_



ARM Macro Assembler    Page 46 


                                                            PIN_SETUP:AND:(1 <<
                                                              0)) != 0)
 1583 00000134         
 1584 00000134         ; Macro for setting the Static Memory Controller
 1585 00000134                 MACRO
 1586 00000134         $label  SMC_Cod          $cs
 1587 00000134         
 1588 00000134         $label  LDR              R1, =SMC_SETUP$cs._Val
 1589 00000134                 STR              R1, [R0, #SMC_SETUP$cs._OFS]
 1590 00000134                 LDR              R1, =SMC_PULSE$cs._Val
 1591 00000134                 STR              R1, [R0, #SMC_PULSE$cs._OFS]
 1592 00000134                 LDR              R1, =SMC_CYCLE$cs._Val
 1593 00000134                 STR              R1, [R0, #SMC_CYCLE$cs._OFS]
 1594 00000134                 LDR              R1, =SMC_MODE$cs._Val
 1595 00000134                 STR              R1, [R0, #SMC_MODE$cs._OFS]
 1596 00000134                 MEND
 1597 00000134         
 1598 00000134                 IF               SMC_CS0_SETUP != 0 ; Setup SMC 
                                                            for CS0 if required
                                                            
 1600                          ENDIF
 1601 00000134                 IF               SMC_CS1_SETUP != 0 ; Setup SMC 
                                                            for CS1 if required
                                                            
 1603                          ENDIF
 1604 00000134                 IF               SMC_CS2_SETUP != 0 ; Setup SMC 
                                                            for CS2 if required
                                                            
 1606                          ENDIF
 1607 00000134                 IF               SMC_CS3_SETUP != 0 ; Setup SMC 
                                                            for CS3 if required
                                                            
 1609                          ENDIF
 1610 00000134                 IF               SMC_CS4_SETUP != 0 ; Setup SMC 
                                                            for CS4 if required
                                                            
 1612                          ENDIF
 1613 00000134                 IF               SMC_CS5_SETUP != 0 ; Setup SMC 
                                                            for CS5 if required
                                                            
 1615                          ENDIF
 1616 00000134                 IF               SMC_CS6_SETUP != 0 ; Setup SMC 
                                                            for CS6 if required
                                                            
 1618                          ENDIF
 1619 00000134                 IF               SMC_CS7_SETUP != 0 ; Setup SMC 
                                                            for CS7 if required
                                                            
 1621                          ENDIF
 1622 00000134         
 1623 00000134                 ENDIF                        ; of IF      SMC_SE
                                                            TUP != 0
 1624 00000134         
 1625 00000134         
 1626 00000134         ; Setup Bus Matrix (MATRIX) ----------------------------
                       ------------------------
 1627 00000134         
 1628 00000134                 IF               MATRIX_SETUP != 0
 1665                          ENDIF                        ; of IF      MATRIX



ARM Macro Assembler    Page 47 


                                                            _SETUP != 0
 1666 00000134         
 1667 00000134         
 1668 00000134         ; Setup External Bus Interface (EBI) -------------------
                       ------------------------
 1669 00000134         
 1670 00000134                 IF               (:LNOT::DEF:NO_EBI_INIT):LAND:(
EBI_SETUP != 0)
 1671 00000134 E59F016C        LDR              R0, =MATRIX_BASE
 1672 00000138 E3A01801        LDR              R1, =EBI_CSA_Val
 1673 0000013C E580111C        STR              R1, [R0, #EBI_CSA_OFS]
 1674 00000140                 ENDIF                        ; of IF      (:LNOT
                                                            ::DEF:NO_EBI_INIT):
                                                            LAND:(EBI_SETUP != 
                                                            0)
 1675 00000140         
 1676 00000140         
 1677 00000140         ; Setup SDRAM Controller (SDRAMC) ----------------------
                       ------------------------
 1678 00000140         
 1679 00000140         ; Setup SDRAM Controller if enabled
 1680 00000140                 IF               (:LNOT::DEF:NO_SDRAM_INIT):LAND
:(SDRAMC_SETUP != 0)
 1681 00000140         
 1682 00000140         ; Setup pins
 1683 00000140                 IF               ((SDRAM_PIN_SETUP:AND:(1 <<  0)
) != 0)
 1684 00000140 E59F0164        LDR              R0, =PIOC_BASE
 1685 00000144 E3A01000        MOV              R1, #0
 1686 00000148                 IF               ((SDRAM_PIN_SETUP:AND:(1 <<  1)
) != 0)
 1687 00000148 E59F1160        LDR              R1, =0xFFFF0000
 1688 0000014C                 ENDIF
 1689 0000014C                 IF               ((SDRAM_PIN_SETUP:AND:(1 <<  2)
) != 0)
 1691                          ENDIF
 1692 0000014C                 IF               ((SDRAM_PIN_SETUP:AND:(1 <<  3)
) != 0)
 1694                          ENDIF
 1695 0000014C                 IF               ((SDRAM_PIN_SETUP:AND:(1 <<  4)
) != 0)
 1697                          ENDIF
 1698 0000014C         
 1699 0000014C E5801060        STR              R1, [R0, #PIO_PUDR_OFS]
 1700 00000150 E5801070        STR              R1, [R0, #PIO_ASR_OFS]
 1701 00000154 E5801004        STR              R1, [R0, #PIO_PDR_OFS]
 1702 00000158                 ENDIF                        ; of IF      ((SDRA
                                                            M_PIN_SETUP:AND:(1 
                                                            <<  0)) != 0)
 1703 00000158         
 1704 00000158         ; Enable pins for SDRAM interfacing
 1705 00000158 E59F014C        LDR              R0, =PIOC_BASE
 1706 0000015C E59F114C        LDR              R1, =0xFFFF0000
 1707 00000160 E5801060        STR              R1, [R0, #PIO_PUDR_OFS]
 1708 00000164 E5801070        STR              R1, [R0, #PIO_ASR_OFS]
 1709 00000168 E5801004        STR              R1, [R0, #PIO_PDR_OFS]
 1710 0000016C         
 1711 0000016C E59F0140        LDR              R0, =SDRAMC_BASE
 1712 00000170 E3A02202        LDR              R2, =EBI_CS1_ADDRESS



ARM Macro Assembler    Page 48 


 1713 00000174 E3A03000        MOV              R3, #0
 1714 00000178         
 1715 00000178         ; Setup Control Register of SDRAM Controller
 1716 00000178 E59F1138        LDR              R1, =SDRAMC_CR_Val
 1717 0000017C E5801008        STR              R1, [R0, #SDRAMC_CR_OFS]
 1718 00000180         
 1719 00000180 E3A01FFA        MOV              R1, #1000
 1720 00000184 E2511001 
                       Wait_SDRAMC_0
                               SUBS             R1, R1, #1
 1721 00000188 1AFFFFFD        BNE              Wait_SDRAMC_0
 1722 0000018C         
 1723 0000018C         ; Write Nop Command to SDRAM
 1724 0000018C E3A01001        MOV              R1, #CMD_NOP
 1725 00000190 E5801000        STR              R1, [R0, #SDRAMC_MR_OFS]
 1726 00000194 E5823000        STR              R3, [R2, #0]
 1727 00000198         
 1728 00000198         ; Write All Banks Precharge Command to SDRAM
 1729 00000198 E3A01002        MOV              R1, #CMD_PRCGALL
 1730 0000019C E5801000        STR              R1, [R0, #SDRAMC_MR_OFS]
 1731 000001A0 E5823000        STR              R3, [R2, #0]
 1732 000001A4         
 1733 000001A4 E3A01FFA        MOV              R1, #1000
 1734 000001A8 E2511001 
                       Wait_SDRAMC_1
                               SUBS             R1, R1, #1
 1735 000001AC 1AFFFFFD        BNE              Wait_SDRAMC_1
 1736 000001B0         
 1737 000001B0         ; Provide 8 Auto Refresh to SDRAM
 1738 000001B0 E3A01004        MOV              R1, #CMD_RFSH
 1739 000001B4 E1A04003        MOV              R4, R3
 1740 000001B8         
 1741 000001B8 E5801000        STR              R1, [R0, #SDRAMC_MR_OFS] 
                                                            ; Set 1 CBR
 1742 000001BC E5824000        STR              R4, [R2, #0x00] ; Perform CBR
 1743 000001C0 E5824000        STR              R4, [R2, #0x00] ; Perform CBR
 1744 000001C4 E5824000        STR              R4, [R2, #0x00] ; Perform CBR
 1745 000001C8 E5824000        STR              R4, [R2, #0x00] ; Perform CBR
 1746 000001CC E5824000        STR              R4, [R2, #0x00] ; Perform CBR
 1747 000001D0 E5824000        STR              R4, [R2, #0x00] ; Perform CBR
 1748 000001D4 E5824000        STR              R4, [R2, #0x00] ; Perform CBR
 1749 000001D8 E5824000        STR              R4, [R2, #0x00] ; Perform CBR
 1750 000001DC         
 1751 000001DC         ; Write a Load Mode Register Command to SDRAM
 1752 000001DC E3A01003        MOV              R1, #CMD_LMR
 1753 000001E0 E3A04020        LDR              R4, =0x00000020
 1754 000001E4 E5801000        STR              R1, [R0, #SDRAMC_MR_OFS] 
                                                            ; Set LMR Operation
                                                            
 1755 000001E8 E5824018        STR              R4, [R2, #24]
 1756 000001EC         
 1757 000001EC         ; Write Nop Command to SDRAM
 1758 000001EC E3A01001        MOV              R1, #CMD_NOP
 1759 000001F0 E5801000        STR              R1, [R0, #SDRAMC_MR_OFS]
 1760 000001F4 E5823000        STR              R3, [R2, #0]
 1761 000001F8         
 1762 000001F8         ; Enter Normal Mode
 1763 000001F8 E3A01000        MOV              R1, #CMD_NORMAL
 1764 000001FC E5801000        STR              R1, [R0, #SDRAMC_MR_OFS]



ARM Macro Assembler    Page 49 


 1765 00000200 E5823000        STR              R3, [R2, #0x00]
 1766 00000204         
 1767 00000204         ; Setup Refresh Timer Register
 1768 00000204 E59F10B0        LDR              R1, =SDRAMC_TR_Val
 1769 00000208 E5801004        STR              R1, [R0, #SDRAMC_TR_OFS]
 1770 0000020C         
 1771 0000020C         ; Setup Other SDRAM Controller Registers
 1772 0000020C E3A01000        LDR              R1, =SDRAMC_LPR_Val
 1773 00000210 E5801010        STR              R1, [R0, #SDRAMC_LPR_OFS]
 1774 00000214 E3A01000        LDR              R1, =SDRAMC_MDR_Val
 1775 00000218 E5801024        STR              R1, [R0, #SDRAMC_MDR_OFS]
 1776 0000021C                 ENDIF                        ; of IF      (:LNOT
                                                            ::DEF:NO_SDRAM_INIT
                                                            ):LAND:(SDRAMC_SETU
                                                            P != 0)
 1777 0000021C         
 1778 0000021C         
 1779 0000021C         ; Watchdog Timer Setup ---------------------------------
                       ------------------------
 1780 0000021C         
 1781 0000021C                 IF               WDT_Val != 0
 1782 0000021C E59F009C        LDR              R0, =WDT_BASE 
                                                            ; Disable Watchdog
 1783 00000220 E3A01902        LDR              R1, =WDT_Val
 1784 00000224 E5801004        STR              R1, [R0, #WDT_MR_OFS]
 1785 00000228                 ENDIF
 1786 00000228         
 1787 00000228         
 1788 00000228         ; Copy Exception Vectors to Internal RAM ---------------
                       ------------------------
 1789 00000228         
 1790 00000228                 IF               :DEF:VEC_TO_RAM
 1797                          ENDIF
 1798 00000228         
 1799 00000228         
 1800 00000228         ; Remap on-chip RAM to address 0 -----------------------
                       ------------------------
 1801 00000228         
 1802 00000228                 IF               :DEF:REMAP
 1806                          ENDIF
 1807 00000228         
 1808 00000228         
 1809 00000228         ; Cache Setup ------------------------------------------
                       ------------------------
 1810 00000228         
 1811 00000228                 IF               ICACHE_SETUP != 0
 1812 00000228 EE110F10        MRC              p15, 0, R0, c1, c0, 0 ; Enable 
                                                            Instruction Cache
 1813 0000022C E3800A01        ORR              R0, R0, #ICACHE_ENABLE
 1814 00000230 EE010F10        MCR              p15, 0, R0, c1, c0, 0
 1815 00000234                 ENDIF
 1816 00000234         
 1817 00000234         
 1818 00000234         ; Setup Stack for each mode ----------------------------
                       ------------------------
 1819 00000234         
 1820 00000234 E59F0088        LDR              R0, =Stack_Top
 1821 00000238         
 1822 00000238         ;  Enter Undefined Instruction Mode and set its Stack Po



ARM Macro Assembler    Page 50 


                       inter
 1823 00000238 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
 1824 0000023C E1A0D000        MOV              SP, R0
 1825 00000240 E2400000        SUB              R0, R0, #UND_Stack_Size
 1826 00000244         
 1827 00000244         ;  Enter Abort Mode and set its Stack Pointer
 1828 00000244 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
 1829 00000248 E1A0D000        MOV              SP, R0
 1830 0000024C E2400000        SUB              R0, R0, #ABT_Stack_Size
 1831 00000250         
 1832 00000250         ;  Enter FIQ Mode and set its Stack Pointer
 1833 00000250 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
 1834 00000254 E1A0D000        MOV              SP, R0
 1835 00000258 E2400000        SUB              R0, R0, #FIQ_Stack_Size
 1836 0000025C         
 1837 0000025C         ;  Enter IRQ Mode and set its Stack Pointer
 1838 0000025C E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
 1839 00000260 E1A0D000        MOV              SP, R0
 1840 00000264 E2400080        SUB              R0, R0, #IRQ_Stack_Size
 1841 00000268         
 1842 00000268         ;  Enter Supervisor Mode and set its Stack Pointer
 1843 00000268 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
 1844 0000026C E1A0D000        MOV              SP, R0
 1845 00000270 E2400008        SUB              R0, R0, #SVC_Stack_Size
 1846 00000274         
 1847 00000274         ;  Enter User Mode and set its Stack Pointer
 1848 00000274 E321F010        MSR              CPSR_c, #Mode_USR
 1849 00000278                 IF               :DEF:__MICROLIB
 1854 00000278         
 1855 00000278 E1A0D000        MOV              SP, R0
 1856 0000027C E24DAB01        SUB              SL, SP, #USR_Stack_Size
 1857 00000280         
 1858 00000280                 ENDIF
 1859 00000280         
 1860 00000280         ; Enter the C code -------------------------------------
                       ------------------------
 1861 00000280         
 1862 00000280                 IMPORT           __main
 1863 00000280 E59F0040        LDR              R0, =__main
 1864 00000284 E12FFF10        BX               R0
 1865 00000288         
 1866 00000288         
 1867 00000288         
 1868 00000288                 IF               :DEF:__MICROLIB
 1874 00000288         ; User Initial Stack & Heap
 1875 00000288 FFFFF000 
              FFFFFA00 
              FFFFFC00 
              00000201 
              0040080C 
              00000B01 
              20483F0E 
              FFFFEC00 
              FFFFEE00 



ARM Macro Assembler    Page 51 


              FFFFF800 
              FFFF0000 
              FFFFEA00 
              85227259 
              000005DD 
              FFFFFD40 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
 1876 00000000         
 1877 00000000                 IMPORT           __use_two_region_memory
 1878 00000000                 EXPORT           __user_initial_stackheap
 1879 00000000         __user_initial_stackheap
 1880 00000000         
 1881 00000000 E59F000C        LDR              R0, =  Heap_Mem
 1882 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
 1883 00000008 E59F2004        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
 1884 0000000C E59F3008        LDR              R3, = Stack_Mem
 1885 00000010 E12FFF1E        BX               LR
 1886 00000014                 ENDIF
 1887 00000014         
 1888 00000014         
 1889 00000014                 END
              00000000 
              00000400 
              00000000 
Command Line: --debug --xref --cpu=ARM926EJ-S --apcs=interwork --depend=SAM9XE.
d -oSAM9XE.o -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\I
nc\Atmel\SAM9XE --list=SAM9XE.lst SAM9XE.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 80 in file SAM9XE.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 82 in file SAM9XE.s
   Uses
      At line 1882 in file SAM9XE.s
      At line 1884 in file SAM9XE.s

Stack_Top 00000488

Symbol: Stack_Top
   Definitions
      At line 84 in file SAM9XE.s
   Uses
      At line 1820 in file SAM9XE.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 83 in file SAM9XE.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 93 in file SAM9XE.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 95 in file SAM9XE.s
   Uses
      At line 1881 in file SAM9XE.s
      At line 1883 in file SAM9XE.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 94 in file SAM9XE.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 96 in file SAM9XE.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 1395 in file SAM9XE.s
   Uses
      At line 1373 in file SAM9XE.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 1405 in file SAM9XE.s
   Uses
      At line 1395 in file SAM9XE.s
      At line 1405 in file SAM9XE.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 1398 in file SAM9XE.s
   Uses
      None
Comment: FIQ_Addr unused
FIQ_Handler 0000009C

Symbol: FIQ_Handler
   Definitions
      At line 1432 in file SAM9XE.s
   Uses
      At line 1398 in file SAM9XE.s
      At line 1432 in file SAM9XE.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 1397 in file SAM9XE.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 1406 in file SAM9XE.s
   Uses
      At line 1397 in file SAM9XE.s
      At line 1406 in file SAM9XE.s

MCKR_Loop1 000000F4

Symbol: MCKR_Loop1
   Definitions
      At line 1504 in file SAM9XE.s
   Uses
      At line 1506 in file SAM9XE.s
Comment: MCKR_Loop1 used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

MCKR_Loop2 00000104

Symbol: MCKR_Loop2
   Definitions
      At line 1512 in file SAM9XE.s
   Uses
      At line 1514 in file SAM9XE.s
Comment: MCKR_Loop2 used once
MOSCS_Loop 000000C8

Symbol: MOSCS_Loop
   Definitions
      At line 1469 in file SAM9XE.s
   Uses
      At line 1471 in file SAM9XE.s
Comment: MOSCS_Loop used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 1394 in file SAM9XE.s
   Uses
      At line 1372 in file SAM9XE.s
Comment: PAbt_Addr used once
PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 1404 in file SAM9XE.s
   Uses
      At line 1394 in file SAM9XE.s
      At line 1404 in file SAM9XE.s

PLLA_Loop 000000DC

Symbol: PLLA_Loop
   Definitions
      At line 1480 in file SAM9XE.s
   Uses
      At line 1482 in file SAM9XE.s
Comment: PLLA_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 1347 in file SAM9XE.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 1391 in file SAM9XE.s
   Uses
      At line 1369 in file SAM9XE.s
Comment: Reset_Addr used once
Reset_Handler 000000A0




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: Reset_Handler
   Definitions
      At line 1438 in file SAM9XE.s
   Uses
      At line 1391 in file SAM9XE.s
      At line 1437 in file SAM9XE.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 1393 in file SAM9XE.s
   Uses
      At line 1371 in file SAM9XE.s
Comment: SWI_Addr used once
SWI_Handler 00000044

Symbol: SWI_Handler
   Definitions
      At line 1402 in file SAM9XE.s
   Uses
      At line 1393 in file SAM9XE.s
      At line 1402 in file SAM9XE.s

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 1392 in file SAM9XE.s
   Uses
      At line 1370 in file SAM9XE.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 1400 in file SAM9XE.s
   Uses
      At line 1392 in file SAM9XE.s
      At line 1400 in file SAM9XE.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 1369 in file SAM9XE.s
   Uses
      None
Comment: Vectors unused
Wait_SDRAMC_0 00000184

Symbol: Wait_SDRAMC_0
   Definitions
      At line 1720 in file SAM9XE.s
   Uses
      At line 1721 in file SAM9XE.s
Comment: Wait_SDRAMC_0 used once
Wait_SDRAMC_1 000001A8




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Symbol: Wait_SDRAMC_1
   Definitions
      At line 1734 in file SAM9XE.s
   Uses
      At line 1735 in file SAM9XE.s
Comment: Wait_SDRAMC_1 used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 1875 in file SAM9XE.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 1879 in file SAM9XE.s
   Uses
      At line 1878 in file SAM9XE.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 72 in file SAM9XE.s
   Uses
      At line 78 in file SAM9XE.s
      At line 1830 in file SAM9XE.s

AIC_EOICR 00000130

Symbol: AIC_EOICR
   Definitions
      At line 1335 in file SAM9XE.s
   Uses
      At line 1426 in file SAM9XE.s
Comment: AIC_EOICR used once
AIC_IVR 00000100

Symbol: AIC_IVR
   Definitions
      At line 1334 in file SAM9XE.s
   Uses
      At line 1413 in file SAM9XE.s
      At line 1414 in file SAM9XE.s

ARM_MODE_ABT 00000017

Symbol: ARM_MODE_ABT
   Definitions
      At line 1326 in file SAM9XE.s
   Uses
      None
Comment: ARM_MODE_ABT unused
ARM_MODE_FIQ 00000011

Symbol: ARM_MODE_FIQ
   Definitions
      At line 1323 in file SAM9XE.s
   Uses
      None
Comment: ARM_MODE_FIQ unused
ARM_MODE_IRQ 00000012

Symbol: ARM_MODE_IRQ
   Definitions
      At line 1324 in file SAM9XE.s
   Uses
      At line 1422 in file SAM9XE.s
Comment: ARM_MODE_IRQ used once
ARM_MODE_SVC 00000013

Symbol: ARM_MODE_SVC
   Definitions
      At line 1325 in file SAM9XE.s
   Uses
      At line 1417 in file SAM9XE.s
Comment: ARM_MODE_SVC used once
ARM_MODE_SYS 0000001F



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: ARM_MODE_SYS
   Definitions
      At line 1328 in file SAM9XE.s
   Uses
      None
Comment: ARM_MODE_SYS unused
ARM_MODE_UND 0000001B

Symbol: ARM_MODE_UND
   Definitions
      At line 1327 in file SAM9XE.s
   Uses
      None
Comment: ARM_MODE_UND unused
ARM_MODE_USR 00000010

Symbol: ARM_MODE_USR
   Definitions
      At line 1322 in file SAM9XE.s
   Uses
      None
Comment: ARM_MODE_USR unused
AT91C_BASE_AIC FFFFF000

Symbol: AT91C_BASE_AIC
   Definitions
      At line 1333 in file SAM9XE.s
   Uses
      At line 1412 in file SAM9XE.s
      At line 1425 in file SAM9XE.s

CKGR_MCFR_OFS 00000024

Symbol: CKGR_MCFR_OFS
   Definitions
      At line 144 in file SAM9XE.s
   Uses
      None
Comment: CKGR_MCFR_OFS unused
CKGR_MOR_OFS 00000020

Symbol: CKGR_MOR_OFS
   Definitions
      At line 143 in file SAM9XE.s
   Uses
      At line 1466 in file SAM9XE.s
Comment: CKGR_MOR_OFS used once
CKGR_MOR_Val 00000B01

Symbol: CKGR_MOR_Val
   Definitions
      At line 324 in file SAM9XE.s
   Uses
      At line 1464 in file SAM9XE.s
      At line 1465 in file SAM9XE.s

CKGR_PLLAR_OFS 00000028




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: CKGR_PLLAR_OFS
   Definitions
      At line 145 in file SAM9XE.s
   Uses
      At line 1477 in file SAM9XE.s
Comment: CKGR_PLLAR_OFS used once
CKGR_PLLAR_Val 20483F0E

Symbol: CKGR_PLLAR_Val
   Definitions
      At line 325 in file SAM9XE.s
   Uses
      At line 1475 in file SAM9XE.s
      At line 1476 in file SAM9XE.s

CKGR_PLLBR_OFS 0000002C

Symbol: CKGR_PLLBR_OFS
   Definitions
      At line 146 in file SAM9XE.s
   Uses
      None
Comment: CKGR_PLLBR_OFS unused
CKGR_PLLBR_Val 00000000

Symbol: CKGR_PLLBR_Val
   Definitions
      At line 326 in file SAM9XE.s
   Uses
      At line 1486 in file SAM9XE.s
Comment: CKGR_PLLBR_Val used once
CMD_LMR 00000003

Symbol: CMD_LMR
   Definitions
      At line 1219 in file SAM9XE.s
   Uses
      At line 1752 in file SAM9XE.s
Comment: CMD_LMR used once
CMD_NOP 00000001

Symbol: CMD_NOP
   Definitions
      At line 1217 in file SAM9XE.s
   Uses
      At line 1724 in file SAM9XE.s
      At line 1758 in file SAM9XE.s

CMD_NORMAL 00000000

Symbol: CMD_NORMAL
   Definitions
      At line 1216 in file SAM9XE.s
   Uses
      At line 1763 in file SAM9XE.s
Comment: CMD_NORMAL used once
CMD_PRCGALL 00000002

Symbol: CMD_PRCGALL



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 1218 in file SAM9XE.s
   Uses
      At line 1729 in file SAM9XE.s
Comment: CMD_PRCGALL used once
CMD_RFSH 00000004

Symbol: CMD_RFSH
   Definitions
      At line 1220 in file SAM9XE.s
   Uses
      At line 1738 in file SAM9XE.s
Comment: CMD_RFSH used once
EBI_CS0_ADDRESS 10000000

Symbol: EBI_CS0_ADDRESS
   Definitions
      At line 359 in file SAM9XE.s
   Uses
      None
Comment: EBI_CS0_ADDRESS unused
EBI_CS1_ADDRESS 20000000

Symbol: EBI_CS1_ADDRESS
   Definitions
      At line 360 in file SAM9XE.s
   Uses
      At line 1712 in file SAM9XE.s
Comment: EBI_CS1_ADDRESS used once
EBI_CS2_ADDRESS 30000000

Symbol: EBI_CS2_ADDRESS
   Definitions
      At line 361 in file SAM9XE.s
   Uses
      None
Comment: EBI_CS2_ADDRESS unused
EBI_CS3_ADDRESS 40000000

Symbol: EBI_CS3_ADDRESS
   Definitions
      At line 362 in file SAM9XE.s
   Uses
      None
Comment: EBI_CS3_ADDRESS unused
EBI_CS4_ADDRESS 50000000

Symbol: EBI_CS4_ADDRESS
   Definitions
      At line 363 in file SAM9XE.s
   Uses
      None
Comment: EBI_CS4_ADDRESS unused
EBI_CS5_ADDRESS 60000000

Symbol: EBI_CS5_ADDRESS
   Definitions
      At line 364 in file SAM9XE.s
   Uses



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      None
Comment: EBI_CS5_ADDRESS unused
EBI_CS6_ADDRESS 70000000

Symbol: EBI_CS6_ADDRESS
   Definitions
      At line 365 in file SAM9XE.s
   Uses
      None
Comment: EBI_CS6_ADDRESS unused
EBI_CS7_ADDRESS 80000000

Symbol: EBI_CS7_ADDRESS
   Definitions
      At line 366 in file SAM9XE.s
   Uses
      None
Comment: EBI_CS7_ADDRESS unused
EBI_CSA_OFS 0000011C

Symbol: EBI_CSA_OFS
   Definitions
      At line 356 in file SAM9XE.s
   Uses
      At line 1673 in file SAM9XE.s
Comment: EBI_CSA_OFS used once
EBI_CSA_Val 00010000

Symbol: EBI_CSA_Val
   Definitions
      At line 590 in file SAM9XE.s
   Uses
      At line 1672 in file SAM9XE.s
Comment: EBI_CSA_Val used once
EBI_SETUP 00000001

Symbol: EBI_SETUP
   Definitions
      At line 568 in file SAM9XE.s
   Uses
      At line 1670 in file SAM9XE.s
Comment: EBI_SETUP used once
EEFC_FMR_Adr FFFFFA00

Symbol: EEFC_FMR_Adr
   Definitions
      At line 102 in file SAM9XE.s
   Uses
      At line 1444 in file SAM9XE.s
Comment: EEFC_FMR_Adr used once
EEFC_FMR_Val 00000200

Symbol: EEFC_FMR_Val
   Definitions
      At line 112 in file SAM9XE.s
   Uses
      At line 1445 in file SAM9XE.s
Comment: EEFC_FMR_Val used once
EEFC_SETUP 00000001



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols


Symbol: EEFC_SETUP
   Definitions
      At line 111 in file SAM9XE.s
   Uses
      At line 1443 in file SAM9XE.s
Comment: EEFC_SETUP used once
FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 73 in file SAM9XE.s
   Uses
      At line 78 in file SAM9XE.s
      At line 1835 in file SAM9XE.s

F_BIT 00000040

Symbol: F_BIT
   Definitions
      At line 1331 in file SAM9XE.s
   Uses
      None
Comment: F_BIT unused
F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 54 in file SAM9XE.s
   Uses
      At line 1823 in file SAM9XE.s
      At line 1828 in file SAM9XE.s
      At line 1833 in file SAM9XE.s
      At line 1838 in file SAM9XE.s
      At line 1843 in file SAM9XE.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 91 in file SAM9XE.s
   Uses
      At line 95 in file SAM9XE.s
      At line 1883 in file SAM9XE.s

ICACHE_ENABLE 00001000

Symbol: ICACHE_ENABLE
   Definitions
      At line 1312 in file SAM9XE.s
   Uses
      At line 1813 in file SAM9XE.s
Comment: ICACHE_ENABLE used once
ICACHE_SETUP 00000001

Symbol: ICACHE_SETUP
   Definitions
      At line 1316 in file SAM9XE.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 1811 in file SAM9XE.s
Comment: ICACHE_SETUP used once
IRAM_BASE 00300000

Symbol: IRAM_BASE
   Definitions
      At line 59 in file SAM9XE.s
   Uses
      None
Comment: IRAM_BASE unused
IROM_BASE 00100000

Symbol: IROM_BASE
   Definitions
      At line 58 in file SAM9XE.s
   Uses
      None
Comment: IROM_BASE unused
IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 74 in file SAM9XE.s
   Uses
      At line 78 in file SAM9XE.s
      At line 1840 in file SAM9XE.s

ISR_Stack_Size 00000088

Symbol: ISR_Stack_Size
   Definitions
      At line 78 in file SAM9XE.s
   Uses
      At line 83 in file SAM9XE.s
Comment: ISR_Stack_Size used once
I_BIT 00000080

Symbol: I_BIT
   Definitions
      At line 1330 in file SAM9XE.s
   Uses
      At line 1422 in file SAM9XE.s
Comment: I_BIT used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 53 in file SAM9XE.s
   Uses
      At line 1823 in file SAM9XE.s
      At line 1828 in file SAM9XE.s
      At line 1833 in file SAM9XE.s
      At line 1838 in file SAM9XE.s
      At line 1843 in file SAM9XE.s

MATRIX_BASE FFFFEE00

Symbol: MATRIX_BASE
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 338 in file SAM9XE.s
   Uses
      At line 1671 in file SAM9XE.s
Comment: MATRIX_BASE used once
MATRIX_MCFG0_OFS 00000000

Symbol: MATRIX_MCFG0_OFS
   Definitions
      At line 339 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG0_OFS unused
MATRIX_MCFG0_Val 00000000

Symbol: MATRIX_MCFG0_Val
   Definitions
      At line 421 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG0_Val unused
MATRIX_MCFG1_OFS 00000004

Symbol: MATRIX_MCFG1_OFS
   Definitions
      At line 340 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG1_OFS unused
MATRIX_MCFG1_Val 00000002

Symbol: MATRIX_MCFG1_Val
   Definitions
      At line 422 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG1_Val unused
MATRIX_MCFG2_OFS 00000008

Symbol: MATRIX_MCFG2_OFS
   Definitions
      At line 341 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG2_OFS unused
MATRIX_MCFG2_Val 00000002

Symbol: MATRIX_MCFG2_Val
   Definitions
      At line 423 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG2_Val unused
MATRIX_MCFG3_OFS 0000000C

Symbol: MATRIX_MCFG3_OFS
   Definitions
      At line 342 in file SAM9XE.s
   Uses
      None



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

Comment: MATRIX_MCFG3_OFS unused
MATRIX_MCFG3_Val 00000002

Symbol: MATRIX_MCFG3_Val
   Definitions
      At line 424 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG3_Val unused
MATRIX_MCFG4_OFS 00000010

Symbol: MATRIX_MCFG4_OFS
   Definitions
      At line 343 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG4_OFS unused
MATRIX_MCFG4_Val 00000002

Symbol: MATRIX_MCFG4_Val
   Definitions
      At line 425 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG4_Val unused
MATRIX_MCFG5_OFS 00000014

Symbol: MATRIX_MCFG5_OFS
   Definitions
      At line 344 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG5_OFS unused
MATRIX_MCFG5_Val 00000002

Symbol: MATRIX_MCFG5_Val
   Definitions
      At line 426 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MCFG5_Val unused
MATRIX_MRCR_OFS 00000100

Symbol: MATRIX_MRCR_OFS
   Definitions
      At line 355 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_MRCR_OFS unused
MATRIX_PRAS0_OFS 00000080

Symbol: MATRIX_PRAS0_OFS
   Definitions
      At line 350 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS0_OFS unused
MATRIX_PRAS0_Val 00000000




ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

Symbol: MATRIX_PRAS0_Val
   Definitions
      At line 558 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS0_Val unused
MATRIX_PRAS1_OFS 00000088

Symbol: MATRIX_PRAS1_OFS
   Definitions
      At line 351 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS1_OFS unused
MATRIX_PRAS1_Val 00000000

Symbol: MATRIX_PRAS1_Val
   Definitions
      At line 559 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS1_Val unused
MATRIX_PRAS2_OFS 00000090

Symbol: MATRIX_PRAS2_OFS
   Definitions
      At line 352 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS2_OFS unused
MATRIX_PRAS2_Val 00000000

Symbol: MATRIX_PRAS2_Val
   Definitions
      At line 560 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS2_Val unused
MATRIX_PRAS3_OFS 00000098

Symbol: MATRIX_PRAS3_OFS
   Definitions
      At line 353 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS3_OFS unused
MATRIX_PRAS3_Val 00000000

Symbol: MATRIX_PRAS3_Val
   Definitions
      At line 561 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS3_Val unused
MATRIX_PRAS4_OFS 000000A0

Symbol: MATRIX_PRAS4_OFS
   Definitions
      At line 354 in file SAM9XE.s



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: MATRIX_PRAS4_OFS unused
MATRIX_PRAS4_Val 00000000

Symbol: MATRIX_PRAS4_Val
   Definitions
      At line 562 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_PRAS4_Val unused
MATRIX_SCFG0_OFS 00000040

Symbol: MATRIX_SCFG0_OFS
   Definitions
      At line 345 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG0_OFS unused
MATRIX_SCFG0_Val 00000010

Symbol: MATRIX_SCFG0_Val
   Definitions
      At line 500 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG0_Val unused
MATRIX_SCFG1_OFS 00000044

Symbol: MATRIX_SCFG1_OFS
   Definitions
      At line 346 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG1_OFS unused
MATRIX_SCFG1_Val 00000010

Symbol: MATRIX_SCFG1_Val
   Definitions
      At line 501 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG1_Val unused
MATRIX_SCFG2_OFS 00000048

Symbol: MATRIX_SCFG2_OFS
   Definitions
      At line 347 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG2_OFS unused
MATRIX_SCFG2_Val 00000010

Symbol: MATRIX_SCFG2_Val
   Definitions
      At line 502 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG2_Val unused



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

MATRIX_SCFG3_OFS 0000004C

Symbol: MATRIX_SCFG3_OFS
   Definitions
      At line 348 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG3_OFS unused
MATRIX_SCFG3_Val 00000010

Symbol: MATRIX_SCFG3_Val
   Definitions
      At line 503 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG3_Val unused
MATRIX_SCFG4_OFS 00000050

Symbol: MATRIX_SCFG4_OFS
   Definitions
      At line 349 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG4_OFS unused
MATRIX_SCFG4_Val 00000010

Symbol: MATRIX_SCFG4_Val
   Definitions
      At line 504 in file SAM9XE.s
   Uses
      None
Comment: MATRIX_SCFG4_Val unused
MATRIX_SETUP 00000000

Symbol: MATRIX_SETUP
   Definitions
      At line 369 in file SAM9XE.s
   Uses
      At line 1628 in file SAM9XE.s
Comment: MATRIX_SETUP used once
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 49 in file SAM9XE.s
   Uses
      At line 1828 in file SAM9XE.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 46 in file SAM9XE.s
   Uses
      At line 1833 in file SAM9XE.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 47 in file SAM9XE.s
   Uses
      At line 1838 in file SAM9XE.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 48 in file SAM9XE.s
   Uses
      At line 1843 in file SAM9XE.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 51 in file SAM9XE.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 50 in file SAM9XE.s
   Uses
      At line 1823 in file SAM9XE.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 45 in file SAM9XE.s
   Uses
      At line 1848 in file SAM9XE.s
Comment: Mode_USR used once
PIOA_BASE FFFFF400

Symbol: PIOA_BASE
   Definitions
      At line 118 in file SAM9XE.s
   Uses
      None
Comment: PIOA_BASE unused
PIOB_BASE FFFFF600

Symbol: PIOB_BASE
   Definitions
      At line 119 in file SAM9XE.s
   Uses
      None
Comment: PIOB_BASE unused
PIOC_BASE FFFFF800

Symbol: PIOC_BASE
   Definitions
      At line 120 in file SAM9XE.s
   Uses



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols

      At line 1684 in file SAM9XE.s
      At line 1705 in file SAM9XE.s

PIO_ASR_OFS 00000070

Symbol: PIO_ASR_OFS
   Definitions
      At line 129 in file SAM9XE.s
   Uses
      At line 1700 in file SAM9XE.s
      At line 1708 in file SAM9XE.s

PIO_BSR_OFS 00000074

Symbol: PIO_BSR_OFS
   Definitions
      At line 130 in file SAM9XE.s
   Uses
      None
Comment: PIO_BSR_OFS unused
PIO_MDDR_OFS 00000054

Symbol: PIO_MDDR_OFS
   Definitions
      At line 126 in file SAM9XE.s
   Uses
      None
Comment: PIO_MDDR_OFS unused
PIO_MDER_OFS 00000050

Symbol: PIO_MDER_OFS
   Definitions
      At line 125 in file SAM9XE.s
   Uses
      None
Comment: PIO_MDER_OFS unused
PIO_ODR_OFS 00000014

Symbol: PIO_ODR_OFS
   Definitions
      At line 124 in file SAM9XE.s
   Uses
      None
Comment: PIO_ODR_OFS unused
PIO_OER_OFS 00000010

Symbol: PIO_OER_OFS
   Definitions
      At line 123 in file SAM9XE.s
   Uses
      None
Comment: PIO_OER_OFS unused
PIO_PDR_OFS 00000004

Symbol: PIO_PDR_OFS
   Definitions
      At line 122 in file SAM9XE.s
   Uses
      At line 1701 in file SAM9XE.s



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Absolute symbols

      At line 1709 in file SAM9XE.s

PIO_PER_OFS 00000000

Symbol: PIO_PER_OFS
   Definitions
      At line 121 in file SAM9XE.s
   Uses
      None
Comment: PIO_PER_OFS unused
PIO_PUDR_OFS 00000060

Symbol: PIO_PUDR_OFS
   Definitions
      At line 127 in file SAM9XE.s
   Uses
      At line 1699 in file SAM9XE.s
      At line 1707 in file SAM9XE.s

PIO_PUER_OFS 00000064

Symbol: PIO_PUER_OFS
   Definitions
      At line 128 in file SAM9XE.s
   Uses
      None
Comment: PIO_PUER_OFS unused
PMC_BASE FFFFFC00

Symbol: PMC_BASE
   Definitions
      At line 136 in file SAM9XE.s
   Uses
      At line 1453 in file SAM9XE.s
Comment: PMC_BASE used once
PMC_IDR_OFS 00000064

Symbol: PMC_IDR_OFS
   Definitions
      At line 153 in file SAM9XE.s
   Uses
      None
Comment: PMC_IDR_OFS unused
PMC_IER_OFS 00000060

Symbol: PMC_IER_OFS
   Definitions
      At line 152 in file SAM9XE.s
   Uses
      None
Comment: PMC_IER_OFS unused
PMC_IMR_OFS 0000006C

Symbol: PMC_IMR_OFS
   Definitions
      At line 155 in file SAM9XE.s
   Uses
      None
Comment: PMC_IMR_OFS unused



ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Absolute symbols

PMC_LOCKA 00000002

Symbol: PMC_LOCKA
   Definitions
      At line 162 in file SAM9XE.s
   Uses
      At line 1481 in file SAM9XE.s
Comment: PMC_LOCKA used once
PMC_LOCKB 00000004

Symbol: PMC_LOCKB
   Definitions
      At line 163 in file SAM9XE.s
   Uses
      None
Comment: PMC_LOCKB unused
PMC_MCKRDY 00000008

Symbol: PMC_MCKRDY
   Definitions
      At line 164 in file SAM9XE.s
   Uses
      At line 1505 in file SAM9XE.s
      At line 1513 in file SAM9XE.s

PMC_MCKR_OFS 00000030

Symbol: PMC_MCKR_OFS
   Definitions
      At line 147 in file SAM9XE.s
   Uses
      At line 1501 in file SAM9XE.s
      At line 1509 in file SAM9XE.s

PMC_MCKR_Val 00000001

Symbol: PMC_MCKR_Val
   Definitions
      At line 327 in file SAM9XE.s
   Uses
      At line 1497 in file SAM9XE.s
      At line 1498 in file SAM9XE.s

PMC_MOSCEN 00000001

Symbol: PMC_MOSCEN
   Definitions
      At line 159 in file SAM9XE.s
   Uses
      At line 1464 in file SAM9XE.s
Comment: PMC_MOSCEN used once
PMC_MOSCS 00000001

Symbol: PMC_MOSCS
   Definitions
      At line 161 in file SAM9XE.s
   Uses
      At line 1470 in file SAM9XE.s
Comment: PMC_MOSCS used once



ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Absolute symbols

PMC_MUL 07FF0000

Symbol: PMC_MUL
   Definitions
      At line 160 in file SAM9XE.s
   Uses
      At line 1475 in file SAM9XE.s
      At line 1486 in file SAM9XE.s

PMC_PCDR_OFS 00000014

Symbol: PMC_PCDR_OFS
   Definitions
      At line 141 in file SAM9XE.s
   Uses
      None
Comment: PMC_PCDR_OFS unused
PMC_PCER_OFS 00000010

Symbol: PMC_PCER_OFS
   Definitions
      At line 140 in file SAM9XE.s
   Uses
      At line 1461 in file SAM9XE.s
Comment: PMC_PCER_OFS used once
PMC_PCER_Val 0040080C

Symbol: PMC_PCER_Val
   Definitions
      At line 323 in file SAM9XE.s
   Uses
      At line 1460 in file SAM9XE.s
Comment: PMC_PCER_Val used once
PMC_PCK0_OFS 00000040

Symbol: PMC_PCK0_OFS
   Definitions
      At line 148 in file SAM9XE.s
   Uses
      At line 1518 in file SAM9XE.s
Comment: PMC_PCK0_OFS used once
PMC_PCK0_Val 00000001

Symbol: PMC_PCK0_Val
   Definitions
      At line 328 in file SAM9XE.s
   Uses
      At line 1517 in file SAM9XE.s
Comment: PMC_PCK0_Val used once
PMC_PCK1_OFS 00000044

Symbol: PMC_PCK1_OFS
   Definitions
      At line 149 in file SAM9XE.s
   Uses
      At line 1522 in file SAM9XE.s
Comment: PMC_PCK1_OFS used once
PMC_PCK1_Val 00000005




ARM Macro Assembler    Page 18 Alphabetic symbol ordering
Absolute symbols

Symbol: PMC_PCK1_Val
   Definitions
      At line 329 in file SAM9XE.s
   Uses
      At line 1521 in file SAM9XE.s
Comment: PMC_PCK1_Val used once
PMC_PCK2_OFS 00000048

Symbol: PMC_PCK2_OFS
   Definitions
      At line 150 in file SAM9XE.s
   Uses
      At line 1526 in file SAM9XE.s
Comment: PMC_PCK2_OFS used once
PMC_PCK2_Val 00000000

Symbol: PMC_PCK2_Val
   Definitions
      At line 330 in file SAM9XE.s
   Uses
      At line 1525 in file SAM9XE.s
Comment: PMC_PCK2_Val used once
PMC_PCK3_OFS 0000004C

Symbol: PMC_PCK3_OFS
   Definitions
      At line 151 in file SAM9XE.s
   Uses
      At line 1530 in file SAM9XE.s
Comment: PMC_PCK3_OFS used once
PMC_PCK3_Val 00000000

Symbol: PMC_PCK3_Val
   Definitions
      At line 331 in file SAM9XE.s
   Uses
      At line 1529 in file SAM9XE.s
Comment: PMC_PCK3_Val used once
PMC_PCSR_OFS 00000018

Symbol: PMC_PCSR_OFS
   Definitions
      At line 142 in file SAM9XE.s
   Uses
      None
Comment: PMC_PCSR_OFS unused
PMC_PLLICPR_OFS 00000080

Symbol: PMC_PLLICPR_OFS
   Definitions
      At line 156 in file SAM9XE.s
   Uses
      None
Comment: PMC_PLLICPR_OFS unused
PMC_SCDR_OFS 00000004

Symbol: PMC_SCDR_OFS
   Definitions
      At line 138 in file SAM9XE.s



ARM Macro Assembler    Page 19 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: PMC_SCDR_OFS unused
PMC_SCER_OFS 00000000

Symbol: PMC_SCER_OFS
   Definitions
      At line 137 in file SAM9XE.s
   Uses
      At line 1457 in file SAM9XE.s
Comment: PMC_SCER_OFS used once
PMC_SCER_Val 00000201

Symbol: PMC_SCER_Val
   Definitions
      At line 322 in file SAM9XE.s
   Uses
      At line 1456 in file SAM9XE.s
Comment: PMC_SCER_Val used once
PMC_SCSR_OFS 00000008

Symbol: PMC_SCSR_OFS
   Definitions
      At line 139 in file SAM9XE.s
   Uses
      None
Comment: PMC_SCSR_OFS unused
PMC_SETUP 00000001

Symbol: PMC_SETUP
   Definitions
      At line 321 in file SAM9XE.s
   Uses
      At line 1452 in file SAM9XE.s
Comment: PMC_SETUP used once
PMC_SR_OFS 00000068

Symbol: PMC_SR_OFS
   Definitions
      At line 154 in file SAM9XE.s
   Uses
      At line 1469 in file SAM9XE.s
      At line 1480 in file SAM9XE.s
      At line 1504 in file SAM9XE.s
      At line 1512 in file SAM9XE.s

SDRAMC_BASE FFFFEA00

Symbol: SDRAMC_BASE
   Definitions
      At line 1208 in file SAM9XE.s
   Uses
      At line 1711 in file SAM9XE.s
Comment: SDRAMC_BASE used once
SDRAMC_CR_OFS 00000008

Symbol: SDRAMC_CR_OFS
   Definitions
      At line 1211 in file SAM9XE.s



ARM Macro Assembler    Page 20 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 1717 in file SAM9XE.s
Comment: SDRAMC_CR_OFS used once
SDRAMC_CR_Val 85227259

Symbol: SDRAMC_CR_Val
   Definitions
      At line 1269 in file SAM9XE.s
   Uses
      At line 1716 in file SAM9XE.s
Comment: SDRAMC_CR_Val used once
SDRAMC_LPR_OFS 00000010

Symbol: SDRAMC_LPR_OFS
   Definitions
      At line 1212 in file SAM9XE.s
   Uses
      At line 1773 in file SAM9XE.s
Comment: SDRAMC_LPR_OFS used once
SDRAMC_LPR_Val 00000000

Symbol: SDRAMC_LPR_Val
   Definitions
      At line 1285 in file SAM9XE.s
   Uses
      At line 1772 in file SAM9XE.s
Comment: SDRAMC_LPR_Val used once
SDRAMC_MDR_OFS 00000024

Symbol: SDRAMC_MDR_OFS
   Definitions
      At line 1213 in file SAM9XE.s
   Uses
      At line 1775 in file SAM9XE.s
Comment: SDRAMC_MDR_OFS used once
SDRAMC_MDR_Val 00000000

Symbol: SDRAMC_MDR_Val
   Definitions
      At line 1291 in file SAM9XE.s
   Uses
      At line 1774 in file SAM9XE.s
Comment: SDRAMC_MDR_Val used once
SDRAMC_MR_OFS 00000000

Symbol: SDRAMC_MR_OFS
   Definitions
      At line 1209 in file SAM9XE.s
   Uses
      At line 1725 in file SAM9XE.s
      At line 1730 in file SAM9XE.s
      At line 1741 in file SAM9XE.s
      At line 1754 in file SAM9XE.s
      At line 1759 in file SAM9XE.s
      At line 1764 in file SAM9XE.s

SDRAMC_SETUP 00000001

Symbol: SDRAMC_SETUP



ARM Macro Assembler    Page 21 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 1223 in file SAM9XE.s
   Uses
      At line 1680 in file SAM9XE.s
Comment: SDRAMC_SETUP used once
SDRAMC_TR_OFS 00000004

Symbol: SDRAMC_TR_OFS
   Definitions
      At line 1210 in file SAM9XE.s
   Uses
      At line 1769 in file SAM9XE.s
Comment: SDRAMC_TR_OFS used once
SDRAMC_TR_Val 000005DD

Symbol: SDRAMC_TR_Val
   Definitions
      At line 1238 in file SAM9XE.s
   Uses
      At line 1768 in file SAM9XE.s
Comment: SDRAMC_TR_Val used once
SDRAM_PIN_SETUP 00000003

Symbol: SDRAM_PIN_SETUP
   Definitions
      At line 1231 in file SAM9XE.s
   Uses
      At line 1683 in file SAM9XE.s
      At line 1686 in file SAM9XE.s
      At line 1689 in file SAM9XE.s
      At line 1692 in file SAM9XE.s
      At line 1695 in file SAM9XE.s

SMC_BASE FFFFEC00

Symbol: SMC_BASE
   Definitions
      At line 598 in file SAM9XE.s
   Uses
      At line 1538 in file SAM9XE.s
Comment: SMC_BASE used once
SMC_CS0_SETUP 00000000

Symbol: SMC_CS0_SETUP
   Definitions
      At line 720 in file SAM9XE.s
   Uses
      At line 1598 in file SAM9XE.s
Comment: SMC_CS0_SETUP used once
SMC_CS1_SETUP 00000000

Symbol: SMC_CS1_SETUP
   Definitions
      At line 788 in file SAM9XE.s
   Uses
      At line 1601 in file SAM9XE.s
Comment: SMC_CS1_SETUP used once
SMC_CS2_SETUP 00000000




ARM Macro Assembler    Page 22 Alphabetic symbol ordering
Absolute symbols

Symbol: SMC_CS2_SETUP
   Definitions
      At line 856 in file SAM9XE.s
   Uses
      At line 1604 in file SAM9XE.s
Comment: SMC_CS2_SETUP used once
SMC_CS3_SETUP 00000000

Symbol: SMC_CS3_SETUP
   Definitions
      At line 924 in file SAM9XE.s
   Uses
      At line 1607 in file SAM9XE.s
Comment: SMC_CS3_SETUP used once
SMC_CS4_SETUP 00000000

Symbol: SMC_CS4_SETUP
   Definitions
      At line 992 in file SAM9XE.s
   Uses
      At line 1610 in file SAM9XE.s
Comment: SMC_CS4_SETUP used once
SMC_CS5_SETUP 00000000

Symbol: SMC_CS5_SETUP
   Definitions
      At line 1060 in file SAM9XE.s
   Uses
      At line 1613 in file SAM9XE.s
Comment: SMC_CS5_SETUP used once
SMC_CS6_SETUP 00000000

Symbol: SMC_CS6_SETUP
   Definitions
      At line 1128 in file SAM9XE.s
   Uses
      At line 1616 in file SAM9XE.s
Comment: SMC_CS6_SETUP used once
SMC_CS7_SETUP 00000000

Symbol: SMC_CS7_SETUP
   Definitions
      At line 1196 in file SAM9XE.s
   Uses
      At line 1619 in file SAM9XE.s
Comment: SMC_CS7_SETUP used once
SMC_CYCLE0_OFS 00000008

Symbol: SMC_CYCLE0_OFS
   Definitions
      At line 603 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE0_OFS unused
SMC_CYCLE0_Val 00010001

Symbol: SMC_CYCLE0_Val
   Definitions
      At line 723 in file SAM9XE.s



ARM Macro Assembler    Page 23 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: SMC_CYCLE0_Val unused
SMC_CYCLE1_OFS 00000018

Symbol: SMC_CYCLE1_OFS
   Definitions
      At line 608 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE1_OFS unused
SMC_CYCLE1_Val 00010001

Symbol: SMC_CYCLE1_Val
   Definitions
      At line 791 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE1_Val unused
SMC_CYCLE2_OFS 00000028

Symbol: SMC_CYCLE2_OFS
   Definitions
      At line 613 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE2_OFS unused
SMC_CYCLE2_Val 00010001

Symbol: SMC_CYCLE2_Val
   Definitions
      At line 859 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE2_Val unused
SMC_CYCLE3_OFS 00000038

Symbol: SMC_CYCLE3_OFS
   Definitions
      At line 618 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE3_OFS unused
SMC_CYCLE3_Val 00010001

Symbol: SMC_CYCLE3_Val
   Definitions
      At line 927 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE3_Val unused
SMC_CYCLE4_OFS 00000048

Symbol: SMC_CYCLE4_OFS
   Definitions
      At line 623 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE4_OFS unused



ARM Macro Assembler    Page 24 Alphabetic symbol ordering
Absolute symbols

SMC_CYCLE4_Val 00010001

Symbol: SMC_CYCLE4_Val
   Definitions
      At line 995 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE4_Val unused
SMC_CYCLE5_OFS 00000058

Symbol: SMC_CYCLE5_OFS
   Definitions
      At line 628 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE5_OFS unused
SMC_CYCLE5_Val 00010001

Symbol: SMC_CYCLE5_Val
   Definitions
      At line 1063 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE5_Val unused
SMC_CYCLE6_OFS 00000068

Symbol: SMC_CYCLE6_OFS
   Definitions
      At line 633 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE6_OFS unused
SMC_CYCLE6_Val 00010001

Symbol: SMC_CYCLE6_Val
   Definitions
      At line 1131 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE6_Val unused
SMC_CYCLE7_OFS 00000078

Symbol: SMC_CYCLE7_OFS
   Definitions
      At line 638 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE7_OFS unused
SMC_CYCLE7_Val 00010001

Symbol: SMC_CYCLE7_Val
   Definitions
      At line 1199 in file SAM9XE.s
   Uses
      None
Comment: SMC_CYCLE7_Val unused
SMC_MODE0_OFS 0000000C

Symbol: SMC_MODE0_OFS



ARM Macro Assembler    Page 25 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 604 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE0_OFS unused
SMC_MODE0_Val 10001000

Symbol: SMC_MODE0_Val
   Definitions
      At line 724 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE0_Val unused
SMC_MODE1_OFS 0000001C

Symbol: SMC_MODE1_OFS
   Definitions
      At line 609 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE1_OFS unused
SMC_MODE1_Val 10001000

Symbol: SMC_MODE1_Val
   Definitions
      At line 792 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE1_Val unused
SMC_MODE2_OFS 0000002C

Symbol: SMC_MODE2_OFS
   Definitions
      At line 614 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE2_OFS unused
SMC_MODE2_Val 10001000

Symbol: SMC_MODE2_Val
   Definitions
      At line 860 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE2_Val unused
SMC_MODE3_OFS 0000003C

Symbol: SMC_MODE3_OFS
   Definitions
      At line 619 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE3_OFS unused
SMC_MODE3_Val 10001000

Symbol: SMC_MODE3_Val
   Definitions
      At line 928 in file SAM9XE.s
   Uses



ARM Macro Assembler    Page 26 Alphabetic symbol ordering
Absolute symbols

      None
Comment: SMC_MODE3_Val unused
SMC_MODE4_OFS 0000004C

Symbol: SMC_MODE4_OFS
   Definitions
      At line 624 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE4_OFS unused
SMC_MODE4_Val 10001000

Symbol: SMC_MODE4_Val
   Definitions
      At line 996 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE4_Val unused
SMC_MODE5_OFS 0000005C

Symbol: SMC_MODE5_OFS
   Definitions
      At line 629 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE5_OFS unused
SMC_MODE5_Val 10001000

Symbol: SMC_MODE5_Val
   Definitions
      At line 1064 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE5_Val unused
SMC_MODE6_OFS 0000006C

Symbol: SMC_MODE6_OFS
   Definitions
      At line 634 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE6_OFS unused
SMC_MODE6_Val 10001000

Symbol: SMC_MODE6_Val
   Definitions
      At line 1132 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE6_Val unused
SMC_MODE7_OFS 0000007C

Symbol: SMC_MODE7_OFS
   Definitions
      At line 639 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE7_OFS unused
SMC_MODE7_Val 10001000



ARM Macro Assembler    Page 27 Alphabetic symbol ordering
Absolute symbols


Symbol: SMC_MODE7_Val
   Definitions
      At line 1200 in file SAM9XE.s
   Uses
      None
Comment: SMC_MODE7_Val unused
SMC_PIN_SETUP 00000000

Symbol: SMC_PIN_SETUP
   Definitions
      At line 656 in file SAM9XE.s
   Uses
      At line 1541 in file SAM9XE.s
Comment: SMC_PIN_SETUP used once
SMC_PULSE0_OFS 00000004

Symbol: SMC_PULSE0_OFS
   Definitions
      At line 602 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE0_OFS unused
SMC_PULSE0_Val 01010101

Symbol: SMC_PULSE0_Val
   Definitions
      At line 722 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE0_Val unused
SMC_PULSE1_OFS 00000014

Symbol: SMC_PULSE1_OFS
   Definitions
      At line 607 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE1_OFS unused
SMC_PULSE1_Val 01010101

Symbol: SMC_PULSE1_Val
   Definitions
      At line 790 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE1_Val unused
SMC_PULSE2_OFS 00000024

Symbol: SMC_PULSE2_OFS
   Definitions
      At line 612 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE2_OFS unused
SMC_PULSE2_Val 01010101

Symbol: SMC_PULSE2_Val
   Definitions



ARM Macro Assembler    Page 28 Alphabetic symbol ordering
Absolute symbols

      At line 858 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE2_Val unused
SMC_PULSE3_OFS 00000034

Symbol: SMC_PULSE3_OFS
   Definitions
      At line 617 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE3_OFS unused
SMC_PULSE3_Val 01010101

Symbol: SMC_PULSE3_Val
   Definitions
      At line 926 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE3_Val unused
SMC_PULSE4_OFS 00000044

Symbol: SMC_PULSE4_OFS
   Definitions
      At line 622 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE4_OFS unused
SMC_PULSE4_Val 01010101

Symbol: SMC_PULSE4_Val
   Definitions
      At line 994 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE4_Val unused
SMC_PULSE5_OFS 00000054

Symbol: SMC_PULSE5_OFS
   Definitions
      At line 627 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE5_OFS unused
SMC_PULSE5_Val 01010101

Symbol: SMC_PULSE5_Val
   Definitions
      At line 1062 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE5_Val unused
SMC_PULSE6_OFS 00000064

Symbol: SMC_PULSE6_OFS
   Definitions
      At line 632 in file SAM9XE.s
   Uses
      None



ARM Macro Assembler    Page 29 Alphabetic symbol ordering
Absolute symbols

Comment: SMC_PULSE6_OFS unused
SMC_PULSE6_Val 01010101

Symbol: SMC_PULSE6_Val
   Definitions
      At line 1130 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE6_Val unused
SMC_PULSE7_OFS 00000074

Symbol: SMC_PULSE7_OFS
   Definitions
      At line 637 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE7_OFS unused
SMC_PULSE7_Val 01010101

Symbol: SMC_PULSE7_Val
   Definitions
      At line 1198 in file SAM9XE.s
   Uses
      None
Comment: SMC_PULSE7_Val unused
SMC_SETUP 00000001

Symbol: SMC_SETUP
   Definitions
      At line 642 in file SAM9XE.s
   Uses
      At line 1537 in file SAM9XE.s
Comment: SMC_SETUP used once
SMC_SETUP0_OFS 00000000

Symbol: SMC_SETUP0_OFS
   Definitions
      At line 601 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP0_OFS unused
SMC_SETUP0_Val 00000000

Symbol: SMC_SETUP0_Val
   Definitions
      At line 721 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP0_Val unused
SMC_SETUP1_OFS 00000010

Symbol: SMC_SETUP1_OFS
   Definitions
      At line 606 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP1_OFS unused
SMC_SETUP1_Val 00000000




ARM Macro Assembler    Page 30 Alphabetic symbol ordering
Absolute symbols

Symbol: SMC_SETUP1_Val
   Definitions
      At line 789 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP1_Val unused
SMC_SETUP2_OFS 00000020

Symbol: SMC_SETUP2_OFS
   Definitions
      At line 611 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP2_OFS unused
SMC_SETUP2_Val 00000000

Symbol: SMC_SETUP2_Val
   Definitions
      At line 857 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP2_Val unused
SMC_SETUP3_OFS 00000030

Symbol: SMC_SETUP3_OFS
   Definitions
      At line 616 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP3_OFS unused
SMC_SETUP3_Val 00000000

Symbol: SMC_SETUP3_Val
   Definitions
      At line 925 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP3_Val unused
SMC_SETUP4_OFS 00000040

Symbol: SMC_SETUP4_OFS
   Definitions
      At line 621 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP4_OFS unused
SMC_SETUP4_Val 00000000

Symbol: SMC_SETUP4_Val
   Definitions
      At line 993 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP4_Val unused
SMC_SETUP5_OFS 00000050

Symbol: SMC_SETUP5_OFS
   Definitions
      At line 626 in file SAM9XE.s



ARM Macro Assembler    Page 31 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: SMC_SETUP5_OFS unused
SMC_SETUP5_Val 00000000

Symbol: SMC_SETUP5_Val
   Definitions
      At line 1061 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP5_Val unused
SMC_SETUP6_OFS 00000060

Symbol: SMC_SETUP6_OFS
   Definitions
      At line 631 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP6_OFS unused
SMC_SETUP6_Val 00000000

Symbol: SMC_SETUP6_Val
   Definitions
      At line 1129 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP6_Val unused
SMC_SETUP7_OFS 00000070

Symbol: SMC_SETUP7_OFS
   Definitions
      At line 636 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP7_OFS unused
SMC_SETUP7_Val 00000000

Symbol: SMC_SETUP7_Val
   Definitions
      At line 1197 in file SAM9XE.s
   Uses
      None
Comment: SMC_SETUP7_Val unused
SVC_Stack_Size 00000008

Symbol: SVC_Stack_Size
   Definitions
      At line 71 in file SAM9XE.s
   Uses
      At line 78 in file SAM9XE.s
      At line 1845 in file SAM9XE.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 70 in file SAM9XE.s
   Uses
      At line 78 in file SAM9XE.s



ARM Macro Assembler    Page 32 Alphabetic symbol ordering
Absolute symbols

      At line 1825 in file SAM9XE.s

USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 75 in file SAM9XE.s
   Uses
      At line 82 in file SAM9XE.s
      At line 1856 in file SAM9XE.s
      At line 1882 in file SAM9XE.s

WDT_BASE FFFFFD40

Symbol: WDT_BASE
   Definitions
      At line 1299 in file SAM9XE.s
   Uses
      At line 1782 in file SAM9XE.s
Comment: WDT_BASE used once
WDT_MR_OFS 00000004

Symbol: WDT_MR_OFS
   Definitions
      At line 1300 in file SAM9XE.s
   Uses
      At line 1784 in file SAM9XE.s
Comment: WDT_MR_OFS used once
WDT_Val 00008000

Symbol: WDT_Val
   Definitions
      At line 1304 in file SAM9XE.s
   Uses
      At line 1781 in file SAM9XE.s
      At line 1783 in file SAM9XE.s

228 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 1862 in file SAM9XE.s
   Uses
      At line 1863 in file SAM9XE.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 1877 in file SAM9XE.s
   Uses
      None
Comment: __use_two_region_memory unused
2 symbols
626 symbols in table
